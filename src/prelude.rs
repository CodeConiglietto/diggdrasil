//Fuck it just export the entire crate
#[rustfmt::skip]
pub use crate::{
    constants::*,
    data::{
        ai::{
            ai_action::AIAction,
            ai_goal::AIGoal
        },
        assets::{
            sprite::Sprite,
            sprite_builder::SpriteBuilder,
            symbol_builder::SymbolBuilder
        },
        creatures::{
            creature_builder::CreatureBuilder,
            race::Race
        },
        effects::{
            particle_type::ParticleType,
        },
        geometry::{
            axis::Axis,
            direction::Direction
        },
        rendering::{
            char::DiggChar,
            color::DiggColor,
            texture::DiggTexture
        },
        world::{
            tile::Tile,
            tile_type::TileType
        },
    },
    ecs::{
        components::{
            ai_action::AIActionComponent,
            ai_goal::AIGoalComponent,
            butcherable::ButcherableComponent,
            collider::ColliderComponent,
            collision::CollisionComponent,
            death::DeathComponent,
            draw::DrawComponent,
            health::HealthComponent,
            intended_movement::IntendedMovementComponent,
            inventory::InventoryComponent,
            item::ItemComponent,
            manipulation::ManipulationComponent,
            particle::ParticleComponent,
            player_control::PlayerControlComponent,
            position::PositionComponent,
            velocity::VelocityComponent,
        },
        resources::{
            entity_map::EntityMapResource,
            keyboard::KeyboardResource,
            particle_map::ParticleMapResource,
            tile_map::TileMapResource,
        },
        systems::{
            action_resolution::ActionResolutionSystem,
            collision_calculation::CollisionCalculationSystem,
            collision_resolution::CollisionResolutionSystem,
            goal_resolution::GoalResolutionSystem,
            health_resolution::HealthResolutionSystem,
            movement_resolution::MovementResolutionSystem,
            particle::ParticleSystem,
            player_control::PlayerControlSystem,
        },
    },
    util::*,
};
