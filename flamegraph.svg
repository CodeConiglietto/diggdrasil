<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::fill (1 samples, 0.04%)</title><rect x="0.0732%" y="453" width="0.0366%" height="15" fill="rgb(227,0,7)"/><text x="0.3232%" y="463.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (1 samples, 0.04%)</title><rect x="0.1098%" y="453" width="0.0366%" height="15" fill="rgb(217,0,24)"/><text x="0.3598%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="0.1465%" y="437" width="0.0366%" height="15" fill="rgb(221,193,54)"/><text x="0.3965%" y="447.50"></text></g><g><title>alsa::pcm::PCM::status (1 samples, 0.04%)</title><rect x="0.1831%" y="437" width="0.0366%" height="15" fill="rgb(248,212,6)"/><text x="0.4331%" y="447.50"></text></g><g><title>[[heap]] (3 samples, 0.11%)</title><rect x="0.1465%" y="453" width="0.1098%" height="15" fill="rgb(208,68,35)"/><text x="0.3965%" y="463.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.04%)</title><rect x="0.2197%" y="437" width="0.0366%" height="15" fill="rgb(232,128,0)"/><text x="0.4697%" y="447.50"></text></g><g><title>[anon] (3 samples, 0.11%)</title><rect x="0.2563%" y="453" width="0.1098%" height="15" fill="rgb(207,160,47)"/><text x="0.5063%" y="463.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.11%)</title><rect x="0.2563%" y="437" width="0.1098%" height="15" fill="rgb(228,23,34)"/><text x="0.5063%" y="447.50"></text></g><g><title>[diggdrasil] (4 samples, 0.15%)</title><rect x="0.3662%" y="453" width="0.1465%" height="15" fill="rgb(218,30,26)"/><text x="0.6162%" y="463.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.15%)</title><rect x="0.3662%" y="437" width="0.1465%" height="15" fill="rgb(220,122,19)"/><text x="0.6162%" y="447.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.04%)</title><rect x="0.5126%" y="437" width="0.0366%" height="15" fill="rgb(250,228,42)"/><text x="0.7626%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.5126%" y="453" width="0.0732%" height="15" fill="rgb(240,193,28)"/><text x="0.7626%" y="463.50"></text></g><g><title>pa_write (1 samples, 0.04%)</title><rect x="0.5492%" y="437" width="0.0366%" height="15" fill="rgb(216,20,37)"/><text x="0.7992%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="0.6225%" y="229" width="0.0366%" height="15" fill="rgb(206,188,39)"/><text x="0.8725%" y="239.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="0.6225%" y="325" width="0.0732%" height="15" fill="rgb(217,207,13)"/><text x="0.8725%" y="335.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="0.6225%" y="309" width="0.0732%" height="15" fill="rgb(231,73,38)"/><text x="0.8725%" y="319.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="0.6225%" y="293" width="0.0732%" height="15" fill="rgb(225,20,46)"/><text x="0.8725%" y="303.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.07%)</title><rect x="0.6225%" y="277" width="0.0732%" height="15" fill="rgb(210,31,41)"/><text x="0.8725%" y="287.50"></text></g><g><title>pa_stream_write (2 samples, 0.07%)</title><rect x="0.6225%" y="261" width="0.0732%" height="15" fill="rgb(221,200,47)"/><text x="0.8725%" y="271.50"></text></g><g><title>pa_stream_write_ext_free (2 samples, 0.07%)</title><rect x="0.6225%" y="245" width="0.0732%" height="15" fill="rgb(226,26,5)"/><text x="0.8725%" y="255.50"></text></g><g><title>pa_pstream_send_memblock (1 samples, 0.04%)</title><rect x="0.6591%" y="229" width="0.0366%" height="15" fill="rgb(249,33,26)"/><text x="0.9091%" y="239.50"></text></g><g><title>pa_queue_push (1 samples, 0.04%)</title><rect x="0.6591%" y="213" width="0.0366%" height="15" fill="rgb(235,183,28)"/><text x="0.9091%" y="223.50"></text></g><g><title>pa_flist_pop (1 samples, 0.04%)</title><rect x="0.6591%" y="197" width="0.0366%" height="15" fill="rgb(221,5,38)"/><text x="0.9091%" y="207.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="0.6591%" y="181" width="0.0366%" height="15" fill="rgb(247,18,42)"/><text x="0.9091%" y="191.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (4 samples, 0.15%)</title><rect x="0.7323%" y="309" width="0.1465%" height="15" fill="rgb(241,131,45)"/><text x="0.9823%" y="319.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (4 samples, 0.15%)</title><rect x="0.7323%" y="293" width="0.1465%" height="15" fill="rgb(249,31,29)"/><text x="0.9823%" y="303.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.11%)</title><rect x="0.7689%" y="277" width="0.1098%" height="15" fill="rgb(225,111,53)"/><text x="1.0189%" y="287.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.07%)</title><rect x="0.8056%" y="261" width="0.0732%" height="15" fill="rgb(238,160,17)"/><text x="1.0556%" y="271.50"></text></g><g><title>pa_mutex_lock (2 samples, 0.07%)</title><rect x="0.8056%" y="245" width="0.0732%" height="15" fill="rgb(214,148,48)"/><text x="1.0556%" y="255.50"></text></g><g><title>__pthread_mutex_lock_full (2 samples, 0.07%)</title><rect x="0.8056%" y="229" width="0.0732%" height="15" fill="rgb(232,36,49)"/><text x="1.0556%" y="239.50"></text></g><g><title>pa_bytes_to_usec (1 samples, 0.04%)</title><rect x="0.9154%" y="229" width="0.0366%" height="15" fill="rgb(209,103,24)"/><text x="1.1654%" y="239.50"></text></g><g><title>pa_sample_spec_valid (1 samples, 0.04%)</title><rect x="0.9154%" y="213" width="0.0366%" height="15" fill="rgb(229,88,8)"/><text x="1.1654%" y="223.50"></text></g><g><title>alsa::pcm::PCM::status (3 samples, 0.11%)</title><rect x="0.8788%" y="309" width="0.1098%" height="15" fill="rgb(213,181,19)"/><text x="1.1288%" y="319.50"></text></g><g><title>snd_pcm_status (3 samples, 0.11%)</title><rect x="0.8788%" y="293" width="0.1098%" height="15" fill="rgb(254,191,54)"/><text x="1.1288%" y="303.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="0.9154%" y="277" width="0.0732%" height="15" fill="rgb(241,83,37)"/><text x="1.1654%" y="287.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.07%)</title><rect x="0.9154%" y="261" width="0.0732%" height="15" fill="rgb(233,36,39)"/><text x="1.1654%" y="271.50"></text></g><g><title>pa_stream_get_latency (2 samples, 0.07%)</title><rect x="0.9154%" y="245" width="0.0732%" height="15" fill="rgb(226,3,54)"/><text x="1.1654%" y="255.50"></text></g><g><title>pa_stream_get_time (1 samples, 0.04%)</title><rect x="0.9520%" y="229" width="0.0366%" height="15" fill="rgb(245,192,40)"/><text x="1.2020%" y="239.50"></text></g><g><title>pa_smoother_get (1 samples, 0.04%)</title><rect x="0.9520%" y="213" width="0.0366%" height="15" fill="rgb(238,167,29)"/><text x="1.2020%" y="223.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (16 samples, 0.59%)</title><rect x="0.6957%" y="325" width="0.5859%" height="15" fill="rgb(232,182,51)"/><text x="0.9457%" y="335.50"></text></g><g><title>alsa::poll::poll (8 samples, 0.29%)</title><rect x="0.9886%" y="309" width="0.2929%" height="15" fill="rgb(231,60,39)"/><text x="1.2386%" y="319.50"></text></g><g><title>__GI___poll (8 samples, 0.29%)</title><rect x="0.9886%" y="293" width="0.2929%" height="15" fill="rgb(208,69,12)"/><text x="1.2386%" y="303.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="1.2450%" y="277" width="0.0366%" height="15" fill="rgb(235,93,37)"/><text x="1.4950%" y="287.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.95%)</title><rect x="0.5859%" y="357" width="0.9520%" height="15" fill="rgb(213,116,39)"/><text x="0.8359%" y="367.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (26 samples, 0.95%)</title><rect x="0.5859%" y="341" width="0.9520%" height="15" fill="rgb(222,207,29)"/><text x="0.8359%" y="351.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (7 samples, 0.26%)</title><rect x="1.2816%" y="325" width="0.2563%" height="15" fill="rgb(206,96,30)"/><text x="1.5316%" y="335.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.15%)</title><rect x="1.3914%" y="309" width="0.1465%" height="15" fill="rgb(218,138,4)"/><text x="1.6414%" y="319.50"></text></g><g><title>cpal_alsa_out (43 samples, 1.57%)</title><rect x="0.0000%" y="469" width="1.5745%" height="15" fill="rgb(250,191,14)"/><text x="0.2500%" y="479.50"></text></g><g><title>__GI___clone (27 samples, 0.99%)</title><rect x="0.5859%" y="453" width="0.9886%" height="15" fill="rgb(239,60,40)"/><text x="0.8359%" y="463.50"></text></g><g><title>start_thread (27 samples, 0.99%)</title><rect x="0.5859%" y="437" width="0.9886%" height="15" fill="rgb(206,27,48)"/><text x="0.8359%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (27 samples, 0.99%)</title><rect x="0.5859%" y="421" width="0.9886%" height="15" fill="rgb(225,35,8)"/><text x="0.8359%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.99%)</title><rect x="0.5859%" y="405" width="0.9886%" height="15" fill="rgb(250,213,24)"/><text x="0.8359%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.99%)</title><rect x="0.5859%" y="389" width="0.9886%" height="15" fill="rgb(247,123,22)"/><text x="0.8359%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.99%)</title><rect x="0.5859%" y="373" width="0.9886%" height="15" fill="rgb(231,138,38)"/><text x="0.8359%" y="383.50"></text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.04%)</title><rect x="1.5379%" y="357" width="0.0366%" height="15" fill="rgb(231,145,46)"/><text x="1.7879%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="1.5379%" y="341" width="0.0366%" height="15" fill="rgb(251,118,11)"/><text x="1.7879%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="1.5379%" y="325" width="0.0366%" height="15" fill="rgb(217,147,25)"/><text x="1.7879%" y="335.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.04%)</title><rect x="1.5379%" y="309" width="0.0366%" height="15" fill="rgb(247,81,37)"/><text x="1.7879%" y="319.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.04%)</title><rect x="1.5379%" y="293" width="0.0366%" height="15" fill="rgb(209,12,38)"/><text x="1.7879%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.04%)</title><rect x="1.5379%" y="277" width="0.0366%" height="15" fill="rgb(227,1,9)"/><text x="1.7879%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (1 samples, 0.04%)</title><rect x="1.5379%" y="261" width="0.0366%" height="15" fill="rgb(248,47,43)"/><text x="1.7879%" y="271.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="1.5379%" y="245" width="0.0366%" height="15" fill="rgb(221,10,30)"/><text x="1.7879%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="1.6844%" y="437" width="0.0366%" height="15" fill="rgb(210,229,1)"/><text x="1.9344%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (1 samples, 0.04%)</title><rect x="1.7210%" y="437" width="0.0366%" height="15" fill="rgb(222,148,37)"/><text x="1.9710%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1.7576%" y="437" width="0.0366%" height="15" fill="rgb(234,67,33)"/><text x="2.0076%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="1.7942%" y="437" width="0.0366%" height="15" fill="rgb(247,98,35)"/><text x="2.0442%" y="447.50"></text></g><g><title>[[heap]] (5 samples, 0.18%)</title><rect x="1.6844%" y="453" width="0.1831%" height="15" fill="rgb(247,138,52)"/><text x="1.9344%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.04%)</title><rect x="1.8308%" y="437" width="0.0366%" height="15" fill="rgb(213,79,30)"/><text x="2.0808%" y="447.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="1.8674%" y="437" width="0.1098%" height="15" fill="rgb(246,177,23)"/><text x="2.1174%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="1.9773%" y="437" width="0.0366%" height="15" fill="rgb(230,62,27)"/><text x="2.2273%" y="447.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="2.0139%" y="437" width="0.0366%" height="15" fill="rgb(216,154,8)"/><text x="2.2639%" y="447.50"></text></g><g><title>[libm-2.33.so] (3 samples, 0.11%)</title><rect x="2.0505%" y="437" width="0.1098%" height="15" fill="rgb(244,35,45)"/><text x="2.3005%" y="447.50"></text></g><g><title>ggez::event::process_event (1 samples, 0.04%)</title><rect x="2.1604%" y="437" width="0.0366%" height="15" fill="rgb(251,115,12)"/><text x="2.4104%" y="447.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::to_instance_properties (5 samples, 0.18%)</title><rect x="2.1970%" y="437" width="0.1831%" height="15" fill="rgb(240,54,50)"/><text x="2.4470%" y="447.50"></text></g><g><title>[[stack]] (16 samples, 0.59%)</title><rect x="1.8674%" y="453" width="0.5859%" height="15" fill="rgb(233,84,52)"/><text x="2.1174%" y="463.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (2 samples, 0.07%)</title><rect x="2.3801%" y="437" width="0.0732%" height="15" fill="rgb(207,117,47)"/><text x="2.6301%" y="447.50"></text></g><g><title>[anon] (6 samples, 0.22%)</title><rect x="2.4533%" y="453" width="0.2197%" height="15" fill="rgb(249,43,39)"/><text x="2.7033%" y="463.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::to_instance_properties (6 samples, 0.22%)</title><rect x="2.4533%" y="437" width="0.2197%" height="15" fill="rgb(209,38,44)"/><text x="2.7033%" y="447.50"></text></g><g><title>[anon_inode:i915.gem] (20 samples, 0.73%)</title><rect x="2.6730%" y="453" width="0.7323%" height="15" fill="rgb(236,212,23)"/><text x="2.9230%" y="463.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::to_instance_properties (20 samples, 0.73%)</title><rect x="2.6730%" y="437" width="0.7323%" height="15" fill="rgb(242,79,21)"/><text x="2.9230%" y="447.50"></text></g><g><title>[libm-2.33.so] (3 samples, 0.11%)</title><rect x="3.4053%" y="437" width="0.1098%" height="15" fill="rgb(211,96,35)"/><text x="3.6553%" y="447.50"></text></g><g><title>bunnyfont::font::BunnyFont&lt;T&gt;::get_src_uvs (1 samples, 0.04%)</title><rect x="3.5152%" y="437" width="0.0366%" height="15" fill="rgb(253,215,40)"/><text x="3.7652%" y="447.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (4 samples, 0.15%)</title><rect x="3.5518%" y="437" width="0.1465%" height="15" fill="rgb(211,81,21)"/><text x="3.8018%" y="447.50"></text></g><g><title>[diggdrasil] (10 samples, 0.37%)</title><rect x="3.4053%" y="453" width="0.3662%" height="15" fill="rgb(208,190,38)"/><text x="3.6553%" y="463.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (2 samples, 0.07%)</title><rect x="3.6983%" y="437" width="0.0732%" height="15" fill="rgb(235,213,38)"/><text x="3.9483%" y="447.50"></text></g><g><title>[libglapi.so.0.0.0] (2 samples, 0.07%)</title><rect x="3.7715%" y="453" width="0.0732%" height="15" fill="rgb(237,122,38)"/><text x="4.0215%" y="463.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (2 samples, 0.07%)</title><rect x="3.8447%" y="437" width="0.0732%" height="15" fill="rgb(244,218,35)"/><text x="4.0947%" y="447.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (2 samples, 0.07%)</title><rect x="3.8447%" y="421" width="0.0732%" height="15" fill="rgb(240,68,47)"/><text x="4.0947%" y="431.50"></text></g><g><title>cpal::host::alsa::Device::default_config (2 samples, 0.07%)</title><rect x="3.8447%" y="405" width="0.0732%" height="15" fill="rgb(210,16,53)"/><text x="4.0947%" y="415.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (2 samples, 0.07%)</title><rect x="3.8447%" y="389" width="0.0732%" height="15" fill="rgb(235,124,12)"/><text x="4.0947%" y="399.50"></text></g><g><title>alsa::pcm::PCM::new (2 samples, 0.07%)</title><rect x="3.8447%" y="373" width="0.0732%" height="15" fill="rgb(224,169,11)"/><text x="4.0947%" y="383.50"></text></g><g><title>snd_pcm_open (2 samples, 0.07%)</title><rect x="3.8447%" y="357" width="0.0732%" height="15" fill="rgb(250,166,2)"/><text x="4.0947%" y="367.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="341" width="0.0732%" height="15" fill="rgb(242,216,29)"/><text x="4.0947%" y="351.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="325" width="0.0732%" height="15" fill="rgb(230,116,27)"/><text x="4.0947%" y="335.50"></text></g><g><title>_snd_pcm_plug_open (2 samples, 0.07%)</title><rect x="3.8447%" y="309" width="0.0732%" height="15" fill="rgb(228,99,48)"/><text x="4.0947%" y="319.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="293" width="0.0732%" height="15" fill="rgb(253,11,6)"/><text x="4.0947%" y="303.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="277" width="0.0732%" height="15" fill="rgb(247,143,39)"/><text x="4.0947%" y="287.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="261" width="0.0732%" height="15" fill="rgb(236,97,10)"/><text x="4.0947%" y="271.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="245" width="0.0732%" height="15" fill="rgb(233,208,19)"/><text x="4.0947%" y="255.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.07%)</title><rect x="3.8447%" y="229" width="0.0732%" height="15" fill="rgb(216,164,2)"/><text x="4.0947%" y="239.50"></text></g><g><title>snd_dlopen (2 samples, 0.07%)</title><rect x="3.8447%" y="213" width="0.0732%" height="15" fill="rgb(220,129,5)"/><text x="4.0947%" y="223.50"></text></g><g><title>dlopen (2 samples, 0.07%)</title><rect x="3.8447%" y="197" width="0.0732%" height="15" fill="rgb(242,17,10)"/><text x="4.0947%" y="207.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.07%)</title><rect x="3.8447%" y="181" width="0.0732%" height="15" fill="rgb(242,107,0)"/><text x="4.0947%" y="191.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.07%)</title><rect x="3.8447%" y="165" width="0.0732%" height="15" fill="rgb(251,28,31)"/><text x="4.0947%" y="175.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.07%)</title><rect x="3.8447%" y="149" width="0.0732%" height="15" fill="rgb(233,223,10)"/><text x="4.0947%" y="159.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.07%)</title><rect x="3.8447%" y="133" width="0.0732%" height="15" fill="rgb(215,21,27)"/><text x="4.0947%" y="143.50"></text></g><g><title>_dl_open (2 samples, 0.07%)</title><rect x="3.8447%" y="117" width="0.0732%" height="15" fill="rgb(232,23,21)"/><text x="4.0947%" y="127.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.07%)</title><rect x="3.8447%" y="101" width="0.0732%" height="15" fill="rgb(244,5,23)"/><text x="4.0947%" y="111.50"></text></g><g><title>dl_open_worker (2 samples, 0.07%)</title><rect x="3.8447%" y="85" width="0.0732%" height="15" fill="rgb(226,81,46)"/><text x="4.0947%" y="95.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.07%)</title><rect x="3.8447%" y="69" width="0.0732%" height="15" fill="rgb(247,70,30)"/><text x="4.0947%" y="79.50"></text></g><g><title>_dl_lookup_symbol_x (2 samples, 0.07%)</title><rect x="3.8447%" y="53" width="0.0732%" height="15" fill="rgb(212,68,19)"/><text x="4.0947%" y="63.50"></text></g><g><title>do_lookup_x (1 samples, 0.04%)</title><rect x="3.8814%" y="37" width="0.0366%" height="15" fill="rgb(240,187,13)"/><text x="4.1314%" y="47.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_program (1 samples, 0.04%)</title><rect x="3.9180%" y="437" width="0.0366%" height="15" fill="rgb(223,113,26)"/><text x="4.1680%" y="447.50"></text></g><g><title>gfx_device_gl::shade::create_program (1 samples, 0.04%)</title><rect x="3.9180%" y="421" width="0.0366%" height="15" fill="rgb(206,192,2)"/><text x="4.1680%" y="431.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="405" width="0.0366%" height="15" fill="rgb(241,108,4)"/><text x="4.1680%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="389" width="0.0366%" height="15" fill="rgb(247,173,49)"/><text x="4.1680%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="373" width="0.0366%" height="15" fill="rgb(224,114,35)"/><text x="4.1680%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="357" width="0.0366%" height="15" fill="rgb(245,159,27)"/><text x="4.1680%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="341" width="0.0366%" height="15" fill="rgb(245,172,44)"/><text x="4.1680%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="325" width="0.0366%" height="15" fill="rgb(236,23,11)"/><text x="4.1680%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="309" width="0.0366%" height="15" fill="rgb(205,117,38)"/><text x="4.1680%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="293" width="0.0366%" height="15" fill="rgb(237,72,25)"/><text x="4.1680%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="277" width="0.0366%" height="15" fill="rgb(244,70,9)"/><text x="4.1680%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="261" width="0.0366%" height="15" fill="rgb(217,125,39)"/><text x="4.1680%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="245" width="0.0366%" height="15" fill="rgb(235,36,10)"/><text x="4.1680%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="229" width="0.0366%" height="15" fill="rgb(251,123,47)"/><text x="4.1680%" y="239.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="213" width="0.0366%" height="15" fill="rgb(221,13,13)"/><text x="4.1680%" y="223.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="3.9180%" y="197" width="0.0366%" height="15" fill="rgb(238,131,9)"/><text x="4.1680%" y="207.50"></text></g><g><title>glutin::api::glx::ContextPrototype::create_context (1 samples, 0.04%)</title><rect x="3.9546%" y="373" width="0.0366%" height="15" fill="rgb(211,50,8)"/><text x="4.2046%" y="383.50"></text></g><g><title>glutin_glx_sys::glx_extra::Glx::load_with (1 samples, 0.04%)</title><rect x="3.9546%" y="357" width="0.0366%" height="15" fill="rgb(245,182,24)"/><text x="4.2046%" y="367.50"></text></g><g><title>glutin_glx_sys::glx_extra::Glx::load_with::do_metaloadfn (1 samples, 0.04%)</title><rect x="3.9546%" y="341" width="0.0366%" height="15" fill="rgb(242,14,37)"/><text x="4.2046%" y="351.50"></text></g><g><title>glutin::api::glx::ContextPrototype::create_context::{{closure}} (1 samples, 0.04%)</title><rect x="3.9546%" y="325" width="0.0366%" height="15" fill="rgb(246,228,12)"/><text x="4.2046%" y="335.50"></text></g><g><title>&lt;&amp;str as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.04%)</title><rect x="3.9546%" y="309" width="0.0366%" height="15" fill="rgb(213,55,15)"/><text x="4.2046%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="3.9546%" y="293" width="0.0366%" height="15" fill="rgb(209,9,3)"/><text x="4.2046%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="3.9546%" y="277" width="0.0366%" height="15" fill="rgb(230,59,30)"/><text x="4.2046%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="3.9546%" y="261" width="0.0366%" height="15" fill="rgb(209,121,21)"/><text x="4.2046%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="3.9546%" y="245" width="0.0366%" height="15" fill="rgb(220,109,13)"/><text x="4.2046%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="3.9546%" y="229" width="0.0366%" height="15" fill="rgb(232,18,1)"/><text x="4.2046%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="3.9546%" y="213" width="0.0366%" height="15" fill="rgb(215,41,42)"/><text x="4.2046%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="3.9546%" y="197" width="0.0366%" height="15" fill="rgb(224,123,36)"/><text x="4.2046%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="3.9546%" y="181" width="0.0366%" height="15" fill="rgb(240,125,3)"/><text x="4.2046%" y="191.50"></text></g><g><title>&lt;ggez::graphics::GlBackendSpec as ggez::graphics::BackendSpec&gt;::init (2 samples, 0.07%)</title><rect x="3.9546%" y="437" width="0.0732%" height="15" fill="rgb(205,98,50)"/><text x="4.2046%" y="447.50"></text></g><g><title>glutin::windowed::&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (2 samples, 0.07%)</title><rect x="3.9546%" y="421" width="0.0732%" height="15" fill="rgb(205,185,37)"/><text x="4.2046%" y="431.50"></text></g><g><title>glutin::platform_impl::platform_impl::x11::Context::new::_{{closure}} (2 samples, 0.07%)</title><rect x="3.9546%" y="405" width="0.0732%" height="15" fill="rgb(238,207,15)"/><text x="4.2046%" y="415.50"></text></g><g><title>glutin::api::glx::ContextPrototype::finish (2 samples, 0.07%)</title><rect x="3.9546%" y="389" width="0.0732%" height="15" fill="rgb(213,199,42)"/><text x="4.2046%" y="399.50"></text></g><g><title>glutin::api::glx::make_current_guard::MakeCurrentGuard::new (1 samples, 0.04%)</title><rect x="3.9912%" y="373" width="0.0366%" height="15" fill="rgb(235,201,11)"/><text x="4.2412%" y="383.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="357" width="0.0366%" height="15" fill="rgb(207,46,11)"/><text x="4.2412%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="341" width="0.0366%" height="15" fill="rgb(241,35,35)"/><text x="4.2412%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="325" width="0.0366%" height="15" fill="rgb(243,32,47)"/><text x="4.2412%" y="335.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="309" width="0.0366%" height="15" fill="rgb(247,202,23)"/><text x="4.2412%" y="319.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="293" width="0.0366%" height="15" fill="rgb(219,102,11)"/><text x="4.2412%" y="303.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="277" width="0.0366%" height="15" fill="rgb(243,110,44)"/><text x="4.2412%" y="287.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="261" width="0.0366%" height="15" fill="rgb(222,74,54)"/><text x="4.2412%" y="271.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="3.9912%" y="245" width="0.0366%" height="15" fill="rgb(216,99,12)"/><text x="4.2412%" y="255.50"></text></g><g><title>__initstate_r (1 samples, 0.04%)</title><rect x="3.9912%" y="229" width="0.0366%" height="15" fill="rgb(226,22,26)"/><text x="4.2412%" y="239.50"></text></g><g><title>__srandom_r (1 samples, 0.04%)</title><rect x="3.9912%" y="213" width="0.0366%" height="15" fill="rgb(217,163,10)"/><text x="4.2412%" y="223.50"></text></g><g><title>XPending (1 samples, 0.04%)</title><rect x="4.0278%" y="437" width="0.0366%" height="15" fill="rgb(213,25,53)"/><text x="4.2778%" y="447.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="437" width="0.0366%" height="15" fill="rgb(252,105,26)"/><text x="4.3144%" y="447.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="421" width="0.0366%" height="15" fill="rgb(220,39,43)"/><text x="4.3144%" y="431.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="405" width="0.0366%" height="15" fill="rgb(229,68,48)"/><text x="4.3144%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="389" width="0.0366%" height="15" fill="rgb(252,8,32)"/><text x="4.3144%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="373" width="0.0366%" height="15" fill="rgb(223,20,43)"/><text x="4.3144%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="357" width="0.0366%" height="15" fill="rgb(229,81,49)"/><text x="4.3144%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="341" width="0.0366%" height="15" fill="rgb(236,28,36)"/><text x="4.3144%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="325" width="0.0366%" height="15" fill="rgb(249,185,26)"/><text x="4.3144%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="309" width="0.0366%" height="15" fill="rgb(249,174,33)"/><text x="4.3144%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.0644%" y="293" width="0.0366%" height="15" fill="rgb(233,201,37)"/><text x="4.3144%" y="303.50"></text></g><g><title>crc32_z (1 samples, 0.04%)</title><rect x="4.0644%" y="277" width="0.0366%" height="15" fill="rgb(221,78,26)"/><text x="4.3144%" y="287.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="4.1011%" y="421" width="0.0366%" height="15" fill="rgb(250,127,30)"/><text x="4.3511%" y="431.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.1011%" y="405" width="0.0366%" height="15" fill="rgb(230,49,44)"/><text x="4.3511%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.1011%" y="389" width="0.0366%" height="15" fill="rgb(229,67,23)"/><text x="4.3511%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.1011%" y="373" width="0.0366%" height="15" fill="rgb(249,83,47)"/><text x="4.3511%" y="383.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.04%)</title><rect x="4.1011%" y="357" width="0.0366%" height="15" fill="rgb(215,43,3)"/><text x="4.3511%" y="367.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="4.1011%" y="341" width="0.0366%" height="15" fill="rgb(238,154,13)"/><text x="4.3511%" y="351.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="4.1011%" y="325" width="0.0366%" height="15" fill="rgb(219,56,2)"/><text x="4.3511%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.1011%" y="309" width="0.0366%" height="15" fill="rgb(233,0,4)"/><text x="4.3511%" y="319.50"></text></g><g><title>__GI___regcomp (1 samples, 0.04%)</title><rect x="4.1011%" y="293" width="0.0366%" height="15" fill="rgb(235,30,7)"/><text x="4.3511%" y="303.50"></text></g><g><title>re_compile_internal (1 samples, 0.04%)</title><rect x="4.1011%" y="277" width="0.0366%" height="15" fill="rgb(250,79,13)"/><text x="4.3511%" y="287.50"></text></g><g><title>peek_token (1 samples, 0.04%)</title><rect x="4.1011%" y="261" width="0.0366%" height="15" fill="rgb(211,146,34)"/><text x="4.3511%" y="271.50"></text></g><g><title>__GI_iswalnum (1 samples, 0.04%)</title><rect x="4.1011%" y="245" width="0.0366%" height="15" fill="rgb(228,22,38)"/><text x="4.3511%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="4.1011%" y="437" width="0.0732%" height="15" fill="rgb(235,168,5)"/><text x="4.3511%" y="447.50"></text></g><g><title>dlopen (1 samples, 0.04%)</title><rect x="4.1377%" y="421" width="0.0366%" height="15" fill="rgb(221,155,16)"/><text x="4.3877%" y="431.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="4.1377%" y="405" width="0.0366%" height="15" fill="rgb(215,215,53)"/><text x="4.3877%" y="415.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="4.1377%" y="389" width="0.0366%" height="15" fill="rgb(223,4,10)"/><text x="4.3877%" y="399.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="4.1377%" y="373" width="0.0366%" height="15" fill="rgb(234,103,6)"/><text x="4.3877%" y="383.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="4.1377%" y="357" width="0.0366%" height="15" fill="rgb(227,97,0)"/><text x="4.3877%" y="367.50"></text></g><g><title>_dl_open (1 samples, 0.04%)</title><rect x="4.1377%" y="341" width="0.0366%" height="15" fill="rgb(234,150,53)"/><text x="4.3877%" y="351.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="4.1377%" y="325" width="0.0366%" height="15" fill="rgb(228,201,54)"/><text x="4.3877%" y="335.50"></text></g><g><title>dl_open_worker (1 samples, 0.04%)</title><rect x="4.1377%" y="309" width="0.0366%" height="15" fill="rgb(222,22,37)"/><text x="4.3877%" y="319.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.04%)</title><rect x="4.1377%" y="293" width="0.0366%" height="15" fill="rgb(237,53,32)"/><text x="4.3877%" y="303.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="4.1377%" y="277" width="0.0366%" height="15" fill="rgb(233,25,53)"/><text x="4.3877%" y="287.50"></text></g><g><title>openaux (1 samples, 0.04%)</title><rect x="4.1377%" y="261" width="0.0366%" height="15" fill="rgb(210,40,34)"/><text x="4.3877%" y="271.50"></text></g><g><title>_dl_map_object (1 samples, 0.04%)</title><rect x="4.1377%" y="245" width="0.0366%" height="15" fill="rgb(241,220,44)"/><text x="4.3877%" y="255.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.04%)</title><rect x="4.1743%" y="437" width="0.0366%" height="15" fill="rgb(235,28,35)"/><text x="4.4243%" y="447.50"></text></g><g><title>[libm-2.33.so] (3 samples, 0.11%)</title><rect x="4.2109%" y="437" width="0.1098%" height="15" fill="rgb(210,56,17)"/><text x="4.4609%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (1 samples, 0.04%)</title><rect x="4.3208%" y="437" width="0.0366%" height="15" fill="rgb(224,130,29)"/><text x="4.5708%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="4.3574%" y="437" width="0.0366%" height="15" fill="rgb(235,212,8)"/><text x="4.6074%" y="447.50"></text></g><g><title>diggdrasil::main (3 samples, 0.11%)</title><rect x="4.3940%" y="437" width="0.1098%" height="15" fill="rgb(223,33,50)"/><text x="4.6440%" y="447.50"></text></g><g><title>ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new (3 samples, 0.11%)</title><rect x="4.3940%" y="421" width="0.1098%" height="15" fill="rgb(219,149,13)"/><text x="4.6440%" y="431.50"></text></g><g><title>ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::from_bytes (3 samples, 0.11%)</title><rect x="4.3940%" y="405" width="0.1098%" height="15" fill="rgb(250,156,29)"/><text x="4.6440%" y="415.50"></text></g><g><title>image::dynimage::load_from_memory (3 samples, 0.11%)</title><rect x="4.3940%" y="389" width="0.1098%" height="15" fill="rgb(216,193,19)"/><text x="4.6440%" y="399.50"></text></g><g><title>image::io::free_functions::load (3 samples, 0.11%)</title><rect x="4.3940%" y="373" width="0.1098%" height="15" fill="rgb(216,135,14)"/><text x="4.6440%" y="383.50"></text></g><g><title>image::dynimage::DynamicImage::from_decoder (3 samples, 0.11%)</title><rect x="4.3940%" y="357" width="0.1098%" height="15" fill="rgb(241,47,5)"/><text x="4.6440%" y="367.50"></text></g><g><title>image::image::decoder_to_vec (3 samples, 0.11%)</title><rect x="4.3940%" y="341" width="0.1098%" height="15" fill="rgb(233,42,35)"/><text x="4.6440%" y="351.50"></text></g><g><title>&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (3 samples, 0.11%)</title><rect x="4.3940%" y="325" width="0.1098%" height="15" fill="rgb(231,13,6)"/><text x="4.6440%" y="335.50"></text></g><g><title>png::decoder::Reader&lt;R&gt;::next_frame (3 samples, 0.11%)</title><rect x="4.3940%" y="309" width="0.1098%" height="15" fill="rgb(207,181,40)"/><text x="4.6440%" y="319.50"></text></g><g><title>png::decoder::Reader&lt;R&gt;::next_interlaced_row (3 samples, 0.11%)</title><rect x="4.3940%" y="293" width="0.1098%" height="15" fill="rgb(254,173,49)"/><text x="4.6440%" y="303.50"></text></g><g><title>png::decoder::expand_paletted (3 samples, 0.11%)</title><rect x="4.3940%" y="277" width="0.1098%" height="15" fill="rgb(221,1,38)"/><text x="4.6440%" y="287.50"></text></g><g><title>find_derivation (1 samples, 0.04%)</title><rect x="4.5038%" y="437" width="0.0366%" height="15" fill="rgb(206,124,46)"/><text x="4.7538%" y="447.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.04%)</title><rect x="4.5038%" y="421" width="0.0366%" height="15" fill="rgb(249,21,11)"/><text x="4.7538%" y="431.50"></text></g><g><title>gfx::factory::FactoryExt::create_pipeline_state (1 samples, 0.04%)</title><rect x="4.5405%" y="437" width="0.0366%" height="15" fill="rgb(222,201,40)"/><text x="4.7905%" y="447.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_program (1 samples, 0.04%)</title><rect x="4.5405%" y="421" width="0.0366%" height="15" fill="rgb(235,61,29)"/><text x="4.7905%" y="431.50"></text></g><g><title>gfx_device_gl::shade::create_program (1 samples, 0.04%)</title><rect x="4.5405%" y="405" width="0.0366%" height="15" fill="rgb(219,207,3)"/><text x="4.7905%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="389" width="0.0366%" height="15" fill="rgb(222,56,46)"/><text x="4.7905%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="373" width="0.0366%" height="15" fill="rgb(239,76,54)"/><text x="4.7905%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="357" width="0.0366%" height="15" fill="rgb(231,124,27)"/><text x="4.7905%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="341" width="0.0366%" height="15" fill="rgb(249,195,6)"/><text x="4.7905%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="325" width="0.0366%" height="15" fill="rgb(237,174,47)"/><text x="4.7905%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="309" width="0.0366%" height="15" fill="rgb(206,201,31)"/><text x="4.7905%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5405%" y="293" width="0.0366%" height="15" fill="rgb(231,57,52)"/><text x="4.7905%" y="303.50"></text></g><g><title>__calloc (1 samples, 0.04%)</title><rect x="4.5405%" y="277" width="0.0366%" height="15" fill="rgb(248,177,22)"/><text x="4.7905%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="4.5405%" y="261" width="0.0366%" height="15" fill="rgb(215,211,37)"/><text x="4.7905%" y="271.50"></text></g><g><title>gfx_device_gl::shade::create_program (1 samples, 0.04%)</title><rect x="4.5771%" y="437" width="0.0366%" height="15" fill="rgb(241,128,51)"/><text x="4.8271%" y="447.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="421" width="0.0366%" height="15" fill="rgb(227,165,31)"/><text x="4.8271%" y="431.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="405" width="0.0366%" height="15" fill="rgb(228,167,24)"/><text x="4.8271%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="389" width="0.0366%" height="15" fill="rgb(228,143,12)"/><text x="4.8271%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="373" width="0.0366%" height="15" fill="rgb(249,149,8)"/><text x="4.8271%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="357" width="0.0366%" height="15" fill="rgb(243,35,44)"/><text x="4.8271%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="341" width="0.0366%" height="15" fill="rgb(246,89,9)"/><text x="4.8271%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="325" width="0.0366%" height="15" fill="rgb(233,213,13)"/><text x="4.8271%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="309" width="0.0366%" height="15" fill="rgb(233,141,41)"/><text x="4.8271%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="293" width="0.0366%" height="15" fill="rgb(239,167,4)"/><text x="4.8271%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="277" width="0.0366%" height="15" fill="rgb(209,217,16)"/><text x="4.8271%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="261" width="0.0366%" height="15" fill="rgb(219,88,35)"/><text x="4.8271%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="245" width="0.0366%" height="15" fill="rgb(220,193,23)"/><text x="4.8271%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="229" width="0.0366%" height="15" fill="rgb(230,90,52)"/><text x="4.8271%" y="239.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="213" width="0.0366%" height="15" fill="rgb(252,106,19)"/><text x="4.8271%" y="223.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="197" width="0.0366%" height="15" fill="rgb(206,74,20)"/><text x="4.8271%" y="207.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="181" width="0.0366%" height="15" fill="rgb(230,138,44)"/><text x="4.8271%" y="191.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="4.5771%" y="165" width="0.0366%" height="15" fill="rgb(235,182,43)"/><text x="4.8271%" y="175.50"></text></g><g><title>ggez::audio::RodioAudioContext::new (1 samples, 0.04%)</title><rect x="4.6137%" y="421" width="0.0366%" height="15" fill="rgb(242,16,51)"/><text x="4.8637%" y="431.50"></text></g><g><title>rodio::stream::OutputStream::try_default (1 samples, 0.04%)</title><rect x="4.6137%" y="405" width="0.0366%" height="15" fill="rgb(248,9,4)"/><text x="4.8637%" y="415.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (1 samples, 0.04%)</title><rect x="4.6137%" y="389" width="0.0366%" height="15" fill="rgb(210,31,22)"/><text x="4.8637%" y="399.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.04%)</title><rect x="4.6137%" y="373" width="0.0366%" height="15" fill="rgb(239,54,39)"/><text x="4.8637%" y="383.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.04%)</title><rect x="4.6137%" y="357" width="0.0366%" height="15" fill="rgb(230,99,41)"/><text x="4.8637%" y="367.50"></text></g><g><title>cpal::host::alsa::Device::default_config (1 samples, 0.04%)</title><rect x="4.6137%" y="341" width="0.0366%" height="15" fill="rgb(253,106,12)"/><text x="4.8637%" y="351.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (1 samples, 0.04%)</title><rect x="4.6137%" y="325" width="0.0366%" height="15" fill="rgb(213,46,41)"/><text x="4.8637%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="4.6137%" y="309" width="0.0366%" height="15" fill="rgb(215,133,35)"/><text x="4.8637%" y="319.50"></text></g><g><title>alsa::pcm::HwParams::test_channels (1 samples, 0.04%)</title><rect x="4.6137%" y="293" width="0.0366%" height="15" fill="rgb(213,28,5)"/><text x="4.8637%" y="303.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="277" width="0.0366%" height="15" fill="rgb(215,77,49)"/><text x="4.8637%" y="287.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="261" width="0.0366%" height="15" fill="rgb(248,100,22)"/><text x="4.8637%" y="271.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="245" width="0.0366%" height="15" fill="rgb(208,67,9)"/><text x="4.8637%" y="255.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="229" width="0.0366%" height="15" fill="rgb(219,133,21)"/><text x="4.8637%" y="239.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="213" width="0.0366%" height="15" fill="rgb(246,46,29)"/><text x="4.8637%" y="223.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="197" width="0.0366%" height="15" fill="rgb(246,185,52)"/><text x="4.8637%" y="207.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="4.6137%" y="181" width="0.0366%" height="15" fill="rgb(252,136,11)"/><text x="4.8637%" y="191.50"></text></g><g><title>[libudev.so.1.7.2] (1 samples, 0.04%)</title><rect x="5.3826%" y="181" width="0.0366%" height="15" fill="rgb(219,138,53)"/><text x="5.6326%" y="191.50"></text></g><g><title>[libudev.so.1.7.2] (16 samples, 0.59%)</title><rect x="4.8700%" y="229" width="0.5859%" height="15" fill="rgb(211,51,23)"/><text x="5.1200%" y="239.50"></text></g><g><title>[libudev.so.1.7.2] (15 samples, 0.55%)</title><rect x="4.9066%" y="213" width="0.5492%" height="15" fill="rgb(247,221,28)"/><text x="5.1566%" y="223.50"></text></g><g><title>[libudev.so.1.7.2] (4 samples, 0.15%)</title><rect x="5.3094%" y="197" width="0.1465%" height="15" fill="rgb(251,222,45)"/><text x="5.5594%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="5.4193%" y="181" width="0.0366%" height="15" fill="rgb(217,162,53)"/><text x="5.6693%" y="191.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="5.4559%" y="229" width="0.0366%" height="15" fill="rgb(229,93,14)"/><text x="5.7059%" y="239.50"></text></g><g><title>[libudev.so.1.7.2] (21 samples, 0.77%)</title><rect x="4.7602%" y="245" width="0.7689%" height="15" fill="rgb(209,67,49)"/><text x="5.0102%" y="255.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.04%)</title><rect x="5.4925%" y="229" width="0.0366%" height="15" fill="rgb(213,87,29)"/><text x="5.7425%" y="239.50"></text></g><g><title>__calloc (1 samples, 0.04%)</title><rect x="5.5291%" y="245" width="0.0366%" height="15" fill="rgb(205,151,52)"/><text x="5.7791%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="5.5291%" y="229" width="0.0366%" height="15" fill="rgb(253,215,39)"/><text x="5.7791%" y="239.50"></text></g><g><title>__libc_close (2 samples, 0.07%)</title><rect x="5.5657%" y="245" width="0.0732%" height="15" fill="rgb(221,220,41)"/><text x="5.8157%" y="255.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="5.6023%" y="229" width="0.0366%" height="15" fill="rgb(218,133,21)"/><text x="5.8523%" y="239.50"></text></g><g><title>__libc_read (1 samples, 0.04%)</title><rect x="5.6390%" y="245" width="0.0366%" height="15" fill="rgb(221,193,43)"/><text x="5.8890%" y="255.50"></text></g><g><title>[libudev.so.1.7.2] (28 samples, 1.03%)</title><rect x="4.7235%" y="261" width="1.0253%" height="15" fill="rgb(240,128,52)"/><text x="4.9735%" y="271.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.07%)</title><rect x="5.6756%" y="245" width="0.0732%" height="15" fill="rgb(253,114,12)"/><text x="5.9256%" y="255.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="5.7488%" y="261" width="0.0366%" height="15" fill="rgb(215,223,47)"/><text x="5.9988%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="5.7488%" y="245" width="0.0366%" height="15" fill="rgb(248,225,23)"/><text x="5.9988%" y="255.50"></text></g><g><title>__GI___openat (1 samples, 0.04%)</title><rect x="5.7854%" y="261" width="0.0366%" height="15" fill="rgb(250,108,0)"/><text x="6.0354%" y="271.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="5.7854%" y="245" width="0.0366%" height="15" fill="rgb(228,208,7)"/><text x="6.0354%" y="255.50"></text></g><g><title>__GI___strdup (1 samples, 0.04%)</title><rect x="5.8220%" y="261" width="0.0366%" height="15" fill="rgb(244,45,10)"/><text x="6.0720%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="5.8220%" y="245" width="0.0366%" height="15" fill="rgb(207,125,25)"/><text x="6.0720%" y="255.50"></text></g><g><title>__GI___strndup (1 samples, 0.04%)</title><rect x="5.8587%" y="261" width="0.0366%" height="15" fill="rgb(210,195,18)"/><text x="6.1087%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="5.8587%" y="245" width="0.0366%" height="15" fill="rgb(249,80,12)"/><text x="6.1087%" y="255.50"></text></g><g><title>___snprintf_chk (1 samples, 0.04%)</title><rect x="5.8953%" y="261" width="0.0366%" height="15" fill="rgb(221,65,9)"/><text x="6.1453%" y="271.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="5.8953%" y="245" width="0.0366%" height="15" fill="rgb(235,49,36)"/><text x="6.1453%" y="255.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="5.8953%" y="229" width="0.0366%" height="15" fill="rgb(225,32,20)"/><text x="6.1453%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="5.9319%" y="261" width="0.0366%" height="15" fill="rgb(215,141,46)"/><text x="6.1819%" y="271.50"></text></g><g><title>[libudev.so.1.7.2] (36 samples, 1.32%)</title><rect x="4.6869%" y="277" width="1.3182%" height="15" fill="rgb(250,160,47)"/><text x="4.9369%" y="287.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.04%)</title><rect x="5.9685%" y="261" width="0.0366%" height="15" fill="rgb(216,222,40)"/><text x="6.2185%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="6.0051%" y="277" width="0.0366%" height="15" fill="rgb(234,217,39)"/><text x="6.2551%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="6.0051%" y="261" width="0.0366%" height="15" fill="rgb(207,178,40)"/><text x="6.2551%" y="271.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.04%)</title><rect x="6.0417%" y="261" width="0.0366%" height="15" fill="rgb(221,136,13)"/><text x="6.2917%" y="271.50"></text></g><g><title>__strstr_sse2 (1 samples, 0.04%)</title><rect x="6.0417%" y="245" width="0.0366%" height="15" fill="rgb(249,199,10)"/><text x="6.2917%" y="255.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.04%)</title><rect x="6.0417%" y="229" width="0.0366%" height="15" fill="rgb(249,222,13)"/><text x="6.2917%" y="239.50"></text></g><g><title>__fopen_internal (2 samples, 0.07%)</title><rect x="6.0417%" y="277" width="0.0732%" height="15" fill="rgb(244,185,38)"/><text x="6.2917%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="6.0784%" y="261" width="0.0366%" height="15" fill="rgb(236,202,9)"/><text x="6.3284%" y="271.50"></text></g><g><title>[libudev.so.1.7.2] (41 samples, 1.50%)</title><rect x="4.6503%" y="293" width="1.5013%" height="15" fill="rgb(250,229,37)"/><text x="4.9003%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="6.1150%" y="277" width="0.0366%" height="15" fill="rgb(206,174,23)"/><text x="6.3650%" y="287.50"></text></g><g><title>ggez::context::ContextBuilder::build (45 samples, 1.65%)</title><rect x="4.6137%" y="437" width="1.6477%" height="15" fill="rgb(211,33,43)"/><text x="4.8637%" y="447.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (44 samples, 1.61%)</title><rect x="4.6503%" y="421" width="1.6111%" height="15" fill="rgb(245,58,50)"/><text x="4.9003%" y="431.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (44 samples, 1.61%)</title><rect x="4.6503%" y="405" width="1.6111%" height="15" fill="rgb(244,68,36)"/><text x="4.9003%" y="415.50"></text></g><g><title>gilrs_core::Gilrs::new (44 samples, 1.61%)</title><rect x="4.6503%" y="389" width="1.6111%" height="15" fill="rgb(232,229,15)"/><text x="4.9003%" y="399.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (44 samples, 1.61%)</title><rect x="4.6503%" y="373" width="1.6111%" height="15" fill="rgb(254,30,23)"/><text x="4.9003%" y="383.50"></text></g><g><title>udev_enumerate_scan_devices (44 samples, 1.61%)</title><rect x="4.6503%" y="357" width="1.6111%" height="15" fill="rgb(235,160,14)"/><text x="4.9003%" y="367.50"></text></g><g><title>[libudev.so.1.7.2] (44 samples, 1.61%)</title><rect x="4.6503%" y="341" width="1.6111%" height="15" fill="rgb(212,155,44)"/><text x="4.9003%" y="351.50"></text></g><g><title>[libudev.so.1.7.2] (44 samples, 1.61%)</title><rect x="4.6503%" y="325" width="1.6111%" height="15" fill="rgb(226,2,50)"/><text x="4.9003%" y="335.50"></text></g><g><title>[libudev.so.1.7.2] (44 samples, 1.61%)</title><rect x="4.6503%" y="309" width="1.6111%" height="15" fill="rgb(234,177,6)"/><text x="4.9003%" y="319.50"></text></g><g><title>__GI_fnmatch (3 samples, 0.11%)</title><rect x="6.1516%" y="293" width="0.1098%" height="15" fill="rgb(217,24,9)"/><text x="6.4016%" y="303.50"></text></g><g><title>__mbsrtowcs_l (1 samples, 0.04%)</title><rect x="6.2248%" y="277" width="0.0366%" height="15" fill="rgb(220,13,46)"/><text x="6.4748%" y="287.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_buffer_raw (1 samples, 0.04%)</title><rect x="6.2614%" y="421" width="0.0366%" height="15" fill="rgb(239,221,27)"/><text x="6.5114%" y="431.50"></text></g><g><title>gfx_device_gl::factory::Factory::init_buffer (1 samples, 0.04%)</title><rect x="6.2614%" y="405" width="0.0366%" height="15" fill="rgb(222,198,25)"/><text x="6.5114%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="6.2614%" y="389" width="0.0366%" height="15" fill="rgb(211,99,13)"/><text x="6.5114%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="6.2614%" y="373" width="0.0366%" height="15" fill="rgb(232,111,31)"/><text x="6.5114%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="6.2614%" y="357" width="0.0366%" height="15" fill="rgb(245,82,37)"/><text x="6.5114%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="6.2614%" y="341" width="0.0366%" height="15" fill="rgb(227,149,46)"/><text x="6.5114%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="6.2614%" y="325" width="0.0366%" height="15" fill="rgb(218,36,50)"/><text x="6.5114%" y="335.50"></text></g><g><title>[iris_dri.so] (7 samples, 0.26%)</title><rect x="6.9572%" y="277" width="0.2563%" height="15" fill="rgb(226,80,48)"/><text x="7.2072%" y="287.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="7.0304%" y="261" width="0.1831%" height="15" fill="rgb(238,224,15)"/><text x="7.2804%" y="271.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="7.2135%" y="277" width="0.0366%" height="15" fill="rgb(241,136,10)"/><text x="7.4635%" y="287.50"></text></g><g><title>_XRead (1 samples, 0.04%)</title><rect x="7.2135%" y="261" width="0.0366%" height="15" fill="rgb(208,32,45)"/><text x="7.4635%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="7.2135%" y="245" width="0.0366%" height="15" fill="rgb(207,135,9)"/><text x="7.4635%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="6.2981%" y="357" width="0.9886%" height="15" fill="rgb(206,86,44)"/><text x="6.5481%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="6.2981%" y="341" width="0.9886%" height="15" fill="rgb(245,177,15)"/><text x="6.5481%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="6.2981%" y="325" width="0.9886%" height="15" fill="rgb(206,64,50)"/><text x="6.5481%" y="335.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="6.2981%" y="309" width="0.9886%" height="15" fill="rgb(234,36,40)"/><text x="6.5481%" y="319.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="6.2981%" y="293" width="0.9886%" height="15" fill="rgb(213,64,8)"/><text x="6.5481%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="7.2501%" y="277" width="0.0366%" height="15" fill="rgb(210,75,36)"/><text x="7.5001%" y="287.50"></text></g><g><title>glutin::api::glx::Context::new (28 samples, 1.03%)</title><rect x="6.2981%" y="373" width="1.0253%" height="15" fill="rgb(229,88,21)"/><text x="6.5481%" y="383.50"></text></g><g><title>glXQueryExtensionsString (1 samples, 0.04%)</title><rect x="7.2867%" y="357" width="0.0366%" height="15" fill="rgb(252,204,47)"/><text x="7.5367%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.04%)</title><rect x="7.2867%" y="341" width="0.0366%" height="15" fill="rgb(208,77,27)"/><text x="7.5367%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.04%)</title><rect x="7.2867%" y="325" width="0.0366%" height="15" fill="rgb(221,76,26)"/><text x="7.5367%" y="335.50"></text></g><g><title>dlopen (1 samples, 0.04%)</title><rect x="7.2867%" y="309" width="0.0366%" height="15" fill="rgb(225,139,18)"/><text x="7.5367%" y="319.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="7.2867%" y="293" width="0.0366%" height="15" fill="rgb(230,137,11)"/><text x="7.5367%" y="303.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="7.2867%" y="277" width="0.0366%" height="15" fill="rgb(212,28,1)"/><text x="7.5367%" y="287.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="7.2867%" y="261" width="0.0366%" height="15" fill="rgb(248,164,17)"/><text x="7.5367%" y="271.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="7.2867%" y="245" width="0.0366%" height="15" fill="rgb(222,171,42)"/><text x="7.5367%" y="255.50"></text></g><g><title>_dl_open (1 samples, 0.04%)</title><rect x="7.2867%" y="229" width="0.0366%" height="15" fill="rgb(243,84,45)"/><text x="7.5367%" y="239.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="7.2867%" y="213" width="0.0366%" height="15" fill="rgb(252,49,23)"/><text x="7.5367%" y="223.50"></text></g><g><title>dl_open_worker (1 samples, 0.04%)</title><rect x="7.2867%" y="197" width="0.0366%" height="15" fill="rgb(215,19,7)"/><text x="7.5367%" y="207.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="7.2867%" y="181" width="0.0366%" height="15" fill="rgb(238,81,41)"/><text x="7.5367%" y="191.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3 samples, 0.11%)</title><rect x="7.3233%" y="277" width="0.1098%" height="15" fill="rgb(210,199,37)"/><text x="7.5733%" y="287.50"></text></g><g><title>__strcmp_avx2 (3 samples, 0.11%)</title><rect x="7.3233%" y="261" width="0.1098%" height="15" fill="rgb(244,192,49)"/><text x="7.5733%" y="271.50"></text></g><g><title>&lt;ggez::graphics::GlBackendSpec as ggez::graphics::BackendSpec&gt;::init (32 samples, 1.17%)</title><rect x="6.2981%" y="421" width="1.1717%" height="15" fill="rgb(226,211,11)"/><text x="6.5481%" y="431.50"></text></g><g><title>glutin::windowed::&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (32 samples, 1.17%)</title><rect x="6.2981%" y="405" width="1.1717%" height="15" fill="rgb(236,162,54)"/><text x="6.5481%" y="415.50"></text></g><g><title>glutin::platform_impl::platform_impl::x11::Context::new::_{{closure}} (32 samples, 1.17%)</title><rect x="6.2981%" y="389" width="1.1717%" height="15" fill="rgb(220,229,9)"/><text x="6.5481%" y="399.50"></text></g><g><title>glutin::api::glx::ContextPrototype::finish (4 samples, 0.15%)</title><rect x="7.3233%" y="373" width="0.1465%" height="15" fill="rgb(250,87,22)"/><text x="7.5733%" y="383.50"></text></g><g><title>glutin::api::glx::make_current_guard::MakeCurrentGuard::new (4 samples, 0.15%)</title><rect x="7.3233%" y="357" width="0.1465%" height="15" fill="rgb(239,43,17)"/><text x="7.5733%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (4 samples, 0.15%)</title><rect x="7.3233%" y="341" width="0.1465%" height="15" fill="rgb(231,177,25)"/><text x="7.5733%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (4 samples, 0.15%)</title><rect x="7.3233%" y="325" width="0.1465%" height="15" fill="rgb(219,179,1)"/><text x="7.5733%" y="335.50"></text></g><g><title>__glDispatchMakeCurrent (4 samples, 0.15%)</title><rect x="7.3233%" y="309" width="0.1465%" height="15" fill="rgb(238,219,53)"/><text x="7.5733%" y="319.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (4 samples, 0.15%)</title><rect x="7.3233%" y="293" width="0.1465%" height="15" fill="rgb(232,167,36)"/><text x="7.5733%" y="303.50"></text></g><g><title>_glapi_get_proc_address (1 samples, 0.04%)</title><rect x="7.4332%" y="277" width="0.0366%" height="15" fill="rgb(244,19,51)"/><text x="7.6832%" y="287.50"></text></g><g><title>[libglapi.so.0.0.0] (1 samples, 0.04%)</title><rect x="7.4332%" y="261" width="0.0366%" height="15" fill="rgb(224,6,22)"/><text x="7.6832%" y="271.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.04%)</title><rect x="7.4332%" y="245" width="0.0366%" height="15" fill="rgb(224,145,5)"/><text x="7.6832%" y="255.50"></text></g><g><title>__memset_avx2_erms (5 samples, 0.18%)</title><rect x="7.4698%" y="421" width="0.1831%" height="15" fill="rgb(234,130,49)"/><text x="7.7198%" y="431.50"></text></g><g><title>ggez::graphics::context::GraphicsContextGeneric&lt;B&gt;::set_window_mode (6 samples, 0.22%)</title><rect x="7.6529%" y="421" width="0.2197%" height="15" fill="rgb(254,6,2)"/><text x="7.9029%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::set_min_inner_size_physical (6 samples, 0.22%)</title><rect x="7.6529%" y="405" width="0.2197%" height="15" fill="rgb(208,96,46)"/><text x="7.9029%" y="415.50"></text></g><g><title>winit::platform_impl::platform::x11::util::hint::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_normal_hints (6 samples, 0.22%)</title><rect x="7.6529%" y="389" width="0.2197%" height="15" fill="rgb(239,3,39)"/><text x="7.9029%" y="399.50"></text></g><g><title>XGetWMSizeHints (5 samples, 0.18%)</title><rect x="7.6895%" y="373" width="0.1831%" height="15" fill="rgb(233,210,1)"/><text x="7.9395%" y="383.50"></text></g><g><title>XGetWindowProperty (5 samples, 0.18%)</title><rect x="7.6895%" y="357" width="0.1831%" height="15" fill="rgb(244,137,37)"/><text x="7.9395%" y="367.50"></text></g><g><title>_XReply (5 samples, 0.18%)</title><rect x="7.6895%" y="341" width="0.1831%" height="15" fill="rgb(240,136,2)"/><text x="7.9395%" y="351.50"></text></g><g><title>xcb_wait_for_reply64 (5 samples, 0.18%)</title><rect x="7.6895%" y="325" width="0.1831%" height="15" fill="rgb(239,18,37)"/><text x="7.9395%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.18%)</title><rect x="7.6895%" y="309" width="0.1831%" height="15" fill="rgb(218,185,22)"/><text x="7.9395%" y="319.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.18%)</title><rect x="7.6895%" y="293" width="0.1831%" height="15" fill="rgb(225,218,4)"/><text x="7.9395%" y="303.50"></text></g><g><title>__GI___poll (5 samples, 0.18%)</title><rect x="7.6895%" y="277" width="0.1831%" height="15" fill="rgb(230,182,32)"/><text x="7.9395%" y="287.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="7.8360%" y="261" width="0.0366%" height="15" fill="rgb(242,56,43)"/><text x="8.0860%" y="271.50"></text></g><g><title>ggez::graphics::image::ImageGeneric&lt;B&gt;::make_raw (1 samples, 0.04%)</title><rect x="7.8726%" y="421" width="0.0366%" height="15" fill="rgb(233,99,24)"/><text x="8.1226%" y="431.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_texture_raw (1 samples, 0.04%)</title><rect x="7.8726%" y="405" width="0.0366%" height="15" fill="rgb(234,209,42)"/><text x="8.1226%" y="415.50"></text></g><g><title>gfx_device_gl::tex::init_texture_data (1 samples, 0.04%)</title><rect x="7.8726%" y="389" width="0.0366%" height="15" fill="rgb(227,7,12)"/><text x="8.1226%" y="399.50"></text></g><g><title>gfx_device_gl::tex::update_texture (1 samples, 0.04%)</title><rect x="7.8726%" y="373" width="0.0366%" height="15" fill="rgb(245,203,43)"/><text x="8.1226%" y="383.50"></text></g><g><title>gfx_device_gl::tex::tex_sub_image (1 samples, 0.04%)</title><rect x="7.8726%" y="357" width="0.0366%" height="15" fill="rgb(238,205,33)"/><text x="8.1226%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="341" width="0.0366%" height="15" fill="rgb(231,56,7)"/><text x="8.1226%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="325" width="0.0366%" height="15" fill="rgb(244,186,29)"/><text x="8.1226%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="309" width="0.0366%" height="15" fill="rgb(234,111,31)"/><text x="8.1226%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="293" width="0.0366%" height="15" fill="rgb(241,149,10)"/><text x="8.1226%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="277" width="0.0366%" height="15" fill="rgb(249,206,44)"/><text x="8.1226%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="261" width="0.0366%" height="15" fill="rgb(251,153,30)"/><text x="8.1226%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.8726%" y="245" width="0.0366%" height="15" fill="rgb(239,152,38)"/><text x="8.1226%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.9092%" y="293" width="0.0366%" height="15" fill="rgb(249,139,47)"/><text x="8.1592%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.9092%" y="277" width="0.0366%" height="15" fill="rgb(244,64,35)"/><text x="8.1592%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.9092%" y="261" width="0.0366%" height="15" fill="rgb(216,46,15)"/><text x="8.1592%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.9092%" y="245" width="0.0366%" height="15" fill="rgb(250,74,19)"/><text x="8.1592%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="7.9092%" y="229" width="0.0366%" height="15" fill="rgb(249,42,33)"/><text x="8.1592%" y="239.50"></text></g><g><title>gfx::factory::FactoryExt::create_pipeline_state (2 samples, 0.07%)</title><rect x="7.9092%" y="405" width="0.0732%" height="15" fill="rgb(242,149,17)"/><text x="8.1592%" y="415.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_program (2 samples, 0.07%)</title><rect x="7.9092%" y="389" width="0.0732%" height="15" fill="rgb(244,29,21)"/><text x="8.1592%" y="399.50"></text></g><g><title>gfx_device_gl::shade::create_program (2 samples, 0.07%)</title><rect x="7.9092%" y="373" width="0.0732%" height="15" fill="rgb(220,130,37)"/><text x="8.1592%" y="383.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9092%" y="357" width="0.0732%" height="15" fill="rgb(211,67,2)"/><text x="8.1592%" y="367.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9092%" y="341" width="0.0732%" height="15" fill="rgb(235,68,52)"/><text x="8.1592%" y="351.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9092%" y="325" width="0.0732%" height="15" fill="rgb(246,142,3)"/><text x="8.1592%" y="335.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9092%" y="309" width="0.0732%" height="15" fill="rgb(241,25,7)"/><text x="8.1592%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="7.9458%" y="293" width="0.0366%" height="15" fill="rgb(242,119,39)"/><text x="8.1958%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="7.9824%" y="245" width="0.0366%" height="15" fill="rgb(241,98,45)"/><text x="8.2324%" y="255.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9824%" y="277" width="0.0732%" height="15" fill="rgb(254,28,30)"/><text x="8.2324%" y="287.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="7.9824%" y="261" width="0.0732%" height="15" fill="rgb(241,142,54)"/><text x="8.2324%" y="271.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="8.0190%" y="245" width="0.0366%" height="15" fill="rgb(222,85,15)"/><text x="8.2690%" y="255.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.04%)</title><rect x="8.0190%" y="229" width="0.0366%" height="15" fill="rgb(210,85,47)"/><text x="8.2690%" y="239.50"></text></g><g><title>__rawmemchr_avx2 (1 samples, 0.04%)</title><rect x="8.0190%" y="213" width="0.0366%" height="15" fill="rgb(224,206,25)"/><text x="8.2690%" y="223.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="7.9824%" y="293" width="0.1098%" height="15" fill="rgb(243,201,19)"/><text x="8.2324%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="8.0557%" y="277" width="0.0366%" height="15" fill="rgb(236,59,4)"/><text x="8.3057%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="8.0557%" y="261" width="0.0366%" height="15" fill="rgb(254,179,45)"/><text x="8.3057%" y="271.50"></text></g><g><title>ggez::graphics::context::GraphicsContextGeneric&lt;ggez::graphics::GlBackendSpec&gt;::new (51 samples, 1.87%)</title><rect x="6.2614%" y="437" width="1.8674%" height="15" fill="rgb(226,14,10)"/><text x="6.5114%" y="447.50">g..</text></g><g><title>ggez::graphics::shader::create_shader (6 samples, 0.22%)</title><rect x="7.9092%" y="421" width="0.2197%" height="15" fill="rgb(244,27,41)"/><text x="8.1592%" y="431.50"></text></g><g><title>gfx::factory::FactoryExt::create_shader_set (4 samples, 0.15%)</title><rect x="7.9824%" y="405" width="0.1465%" height="15" fill="rgb(235,35,32)"/><text x="8.2324%" y="415.50"></text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_shader (4 samples, 0.15%)</title><rect x="7.9824%" y="389" width="0.1465%" height="15" fill="rgb(218,68,31)"/><text x="8.2324%" y="399.50"></text></g><g><title>gfx_device_gl::shade::create_shader (4 samples, 0.15%)</title><rect x="7.9824%" y="373" width="0.1465%" height="15" fill="rgb(207,120,37)"/><text x="8.2324%" y="383.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.15%)</title><rect x="7.9824%" y="357" width="0.1465%" height="15" fill="rgb(227,98,0)"/><text x="8.2324%" y="367.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.15%)</title><rect x="7.9824%" y="341" width="0.1465%" height="15" fill="rgb(207,7,3)"/><text x="8.2324%" y="351.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.15%)</title><rect x="7.9824%" y="325" width="0.1465%" height="15" fill="rgb(206,98,19)"/><text x="8.2324%" y="335.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.15%)</title><rect x="7.9824%" y="309" width="0.1465%" height="15" fill="rgb(217,5,26)"/><text x="8.2324%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="8.0923%" y="293" width="0.0366%" height="15" fill="rgb(235,190,38)"/><text x="8.3423%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="8.0923%" y="277" width="0.0366%" height="15" fill="rgb(247,86,24)"/><text x="8.3423%" y="287.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::to_instance_properties (12 samples, 0.44%)</title><rect x="8.1289%" y="437" width="0.4394%" height="15" fill="rgb(205,101,16)"/><text x="8.3789%" y="447.50"></text></g><g><title>ggez::graphics::image::ImageGeneric&lt;ggez::graphics::GlBackendSpec&gt;::height (1 samples, 0.04%)</title><rect x="8.5683%" y="437" width="0.0366%" height="15" fill="rgb(246,168,33)"/><text x="8.8183%" y="447.50"></text></g><g><title>gilrs::ff::server::run (1 samples, 0.04%)</title><rect x="8.6049%" y="437" width="0.0366%" height="15" fill="rgb(231,114,1)"/><text x="8.8549%" y="447.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (1 samples, 0.04%)</title><rect x="8.6415%" y="437" width="0.0366%" height="15" fill="rgb(207,184,53)"/><text x="8.8915%" y="447.50"></text></g><g><title>glutin::api::glx::Context::new (1 samples, 0.04%)</title><rect x="8.6781%" y="437" width="0.0366%" height="15" fill="rgb(224,95,51)"/><text x="8.9281%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="8.6781%" y="421" width="0.0366%" height="15" fill="rgb(212,188,45)"/><text x="8.9281%" y="431.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="8.6781%" y="405" width="0.0366%" height="15" fill="rgb(223,154,38)"/><text x="8.9281%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="8.6781%" y="389" width="0.0366%" height="15" fill="rgb(251,22,52)"/><text x="8.9281%" y="399.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="8.6781%" y="373" width="0.0366%" height="15" fill="rgb(229,209,22)"/><text x="8.9281%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="8.6781%" y="357" width="0.0366%" height="15" fill="rgb(234,138,34)"/><text x="8.9281%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="8.6781%" y="341" width="0.0366%" height="15" fill="rgb(212,95,11)"/><text x="8.9281%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="8.6781%" y="325" width="0.0366%" height="15" fill="rgb(240,179,47)"/><text x="8.9281%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="8.6781%" y="309" width="0.0366%" height="15" fill="rgb(240,163,11)"/><text x="8.9281%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="8.6781%" y="293" width="0.0366%" height="15" fill="rgb(236,37,12)"/><text x="8.9281%" y="303.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.04%)</title><rect x="8.6781%" y="277" width="0.0366%" height="15" fill="rgb(232,164,16)"/><text x="8.9281%" y="287.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="8.6781%" y="261" width="0.0366%" height="15" fill="rgb(244,205,15)"/><text x="8.9281%" y="271.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="8.6781%" y="245" width="0.0366%" height="15" fill="rgb(223,117,47)"/><text x="8.9281%" y="255.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="8.6781%" y="229" width="0.0366%" height="15" fill="rgb(244,107,35)"/><text x="8.9281%" y="239.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (4 samples, 0.15%)</title><rect x="8.7148%" y="309" width="0.1465%" height="15" fill="rgb(205,140,8)"/><text x="8.9648%" y="319.50"></text></g><g><title>XML_ParseBuffer (4 samples, 0.15%)</title><rect x="8.7148%" y="293" width="0.1465%" height="15" fill="rgb(228,84,46)"/><text x="8.9648%" y="303.50"></text></g><g><title>[libexpat.so.1.8.1] (4 samples, 0.15%)</title><rect x="8.7148%" y="277" width="0.1465%" height="15" fill="rgb(254,188,9)"/><text x="8.9648%" y="287.50"></text></g><g><title>[libexpat.so.1.8.1] (3 samples, 0.11%)</title><rect x="8.7514%" y="261" width="0.1098%" height="15" fill="rgb(206,112,54)"/><text x="9.0014%" y="271.50"></text></g><g><title>[libexpat.so.1.8.1] (3 samples, 0.11%)</title><rect x="8.7514%" y="245" width="0.1098%" height="15" fill="rgb(216,84,49)"/><text x="9.0014%" y="255.50"></text></g><g><title>[libexpat.so.1.8.1] (2 samples, 0.07%)</title><rect x="8.7880%" y="229" width="0.0732%" height="15" fill="rgb(214,194,35)"/><text x="9.0380%" y="239.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="8.8246%" y="213" width="0.0366%" height="15" fill="rgb(249,28,3)"/><text x="9.0746%" y="223.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="8.8612%" y="181" width="0.0366%" height="15" fill="rgb(222,56,52)"/><text x="9.1112%" y="191.50"></text></g><g><title>_dl_init (1 samples, 0.04%)</title><rect x="8.8612%" y="165" width="0.0366%" height="15" fill="rgb(245,217,50)"/><text x="9.1112%" y="175.50"></text></g><g><title>call_init (1 samples, 0.04%)</title><rect x="8.8612%" y="149" width="0.0366%" height="15" fill="rgb(213,201,24)"/><text x="9.1112%" y="159.50"></text></g><g><title>llvm::orc::MachOPlatform::notifyRemoving (1 samples, 0.04%)</title><rect x="8.8612%" y="133" width="0.0366%" height="15" fill="rgb(248,116,28)"/><text x="9.1112%" y="143.50"></text></g><g><title>[libLLVM-12.so] (1 samples, 0.04%)</title><rect x="8.8612%" y="117" width="0.0366%" height="15" fill="rgb(219,72,43)"/><text x="9.1112%" y="127.50"></text></g><g><title>glutin::platform_impl::platform_impl::x11::Context::new::_{{closure}} (27 samples, 0.99%)</title><rect x="8.7148%" y="437" width="0.9886%" height="15" fill="rgb(209,138,14)"/><text x="8.9648%" y="447.50"></text></g><g><title>glutin::api::glx::Context::new (27 samples, 0.99%)</title><rect x="8.7148%" y="421" width="0.9886%" height="15" fill="rgb(222,18,33)"/><text x="8.9648%" y="431.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="405" width="0.9886%" height="15" fill="rgb(213,199,7)"/><text x="8.9648%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="389" width="0.9886%" height="15" fill="rgb(250,110,10)"/><text x="8.9648%" y="399.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="373" width="0.9886%" height="15" fill="rgb(248,123,6)"/><text x="8.9648%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="357" width="0.9886%" height="15" fill="rgb(206,91,31)"/><text x="8.9648%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="341" width="0.9886%" height="15" fill="rgb(211,154,13)"/><text x="8.9648%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (27 samples, 0.99%)</title><rect x="8.7148%" y="325" width="0.9886%" height="15" fill="rgb(225,148,7)"/><text x="8.9648%" y="335.50"></text></g><g><title>dlopen (23 samples, 0.84%)</title><rect x="8.8612%" y="309" width="0.8422%" height="15" fill="rgb(220,160,43)"/><text x="9.1112%" y="319.50"></text></g><g><title>[libdl-2.33.so] (23 samples, 0.84%)</title><rect x="8.8612%" y="293" width="0.8422%" height="15" fill="rgb(213,52,39)"/><text x="9.1112%" y="303.50"></text></g><g><title>__GI__dl_catch_error (23 samples, 0.84%)</title><rect x="8.8612%" y="277" width="0.8422%" height="15" fill="rgb(243,137,7)"/><text x="9.1112%" y="287.50"></text></g><g><title>__GI__dl_catch_exception (23 samples, 0.84%)</title><rect x="8.8612%" y="261" width="0.8422%" height="15" fill="rgb(230,79,13)"/><text x="9.1112%" y="271.50"></text></g><g><title>[libdl-2.33.so] (23 samples, 0.84%)</title><rect x="8.8612%" y="245" width="0.8422%" height="15" fill="rgb(247,105,23)"/><text x="9.1112%" y="255.50"></text></g><g><title>_dl_open (23 samples, 0.84%)</title><rect x="8.8612%" y="229" width="0.8422%" height="15" fill="rgb(223,179,41)"/><text x="9.1112%" y="239.50"></text></g><g><title>__GI__dl_catch_exception (23 samples, 0.84%)</title><rect x="8.8612%" y="213" width="0.8422%" height="15" fill="rgb(218,9,34)"/><text x="9.1112%" y="223.50"></text></g><g><title>dl_open_worker (23 samples, 0.84%)</title><rect x="8.8612%" y="197" width="0.8422%" height="15" fill="rgb(222,106,8)"/><text x="9.1112%" y="207.50"></text></g><g><title>_dl_relocate_object (22 samples, 0.81%)</title><rect x="8.8978%" y="181" width="0.8056%" height="15" fill="rgb(211,220,0)"/><text x="9.1478%" y="191.50"></text></g><g><title>_dl_lookup_symbol_x (19 samples, 0.70%)</title><rect x="9.0077%" y="165" width="0.6957%" height="15" fill="rgb(229,52,16)"/><text x="9.2577%" y="175.50"></text></g><g><title>do_lookup_x (18 samples, 0.66%)</title><rect x="9.0443%" y="149" width="0.6591%" height="15" fill="rgb(212,155,18)"/><text x="9.2943%" y="159.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="325" width="0.0366%" height="15" fill="rgb(242,21,14)"/><text x="9.9534%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="309" width="0.0366%" height="15" fill="rgb(222,19,48)"/><text x="9.9534%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="293" width="0.0366%" height="15" fill="rgb(232,45,27)"/><text x="9.9534%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="277" width="0.0366%" height="15" fill="rgb(249,103,42)"/><text x="9.9534%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="261" width="0.0366%" height="15" fill="rgb(246,81,33)"/><text x="9.9534%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="245" width="0.0366%" height="15" fill="rgb(252,33,42)"/><text x="9.9534%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7034%" y="229" width="0.0366%" height="15" fill="rgb(209,212,41)"/><text x="9.9534%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="9.7034%" y="213" width="0.0366%" height="15" fill="rgb(207,154,6)"/><text x="9.9534%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="9.7034%" y="197" width="0.0366%" height="15" fill="rgb(223,64,47)"/><text x="9.9534%" y="207.50"></text></g><g><title>malloc_consolidate (1 samples, 0.04%)</title><rect x="9.7034%" y="181" width="0.0366%" height="15" fill="rgb(211,161,38)"/><text x="9.9534%" y="191.50"></text></g><g><title>glutin::windowed::&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (2 samples, 0.07%)</title><rect x="9.7034%" y="437" width="0.0732%" height="15" fill="rgb(219,138,40)"/><text x="9.9534%" y="447.50"></text></g><g><title>glutin::platform_impl::platform_impl::x11::Context::new::_{{closure}} (2 samples, 0.07%)</title><rect x="9.7034%" y="421" width="0.0732%" height="15" fill="rgb(241,228,46)"/><text x="9.9534%" y="431.50"></text></g><g><title>glutin::api::glx::Context::new (2 samples, 0.07%)</title><rect x="9.7034%" y="405" width="0.0732%" height="15" fill="rgb(223,209,38)"/><text x="9.9534%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="9.7034%" y="389" width="0.0732%" height="15" fill="rgb(236,164,45)"/><text x="9.9534%" y="399.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="9.7034%" y="373" width="0.0732%" height="15" fill="rgb(231,15,5)"/><text x="9.9534%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="9.7034%" y="357" width="0.0732%" height="15" fill="rgb(252,35,15)"/><text x="9.9534%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="9.7034%" y="341" width="0.0732%" height="15" fill="rgb(248,181,18)"/><text x="9.9534%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="9.7400%" y="325" width="0.0366%" height="15" fill="rgb(233,39,42)"/><text x="9.9900%" y="335.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="9.7400%" y="309" width="0.0366%" height="15" fill="rgb(238,110,33)"/><text x="9.9900%" y="319.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="9.7400%" y="293" width="0.0366%" height="15" fill="rgb(233,195,10)"/><text x="9.9900%" y="303.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.04%)</title><rect x="9.7400%" y="277" width="0.0366%" height="15" fill="rgb(254,105,3)"/><text x="9.9900%" y="287.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="9.7400%" y="261" width="0.0366%" height="15" fill="rgb(221,225,9)"/><text x="9.9900%" y="271.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="9.7400%" y="245" width="0.0366%" height="15" fill="rgb(224,227,45)"/><text x="9.9900%" y="255.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="9.7400%" y="229" width="0.0366%" height="15" fill="rgb(229,198,43)"/><text x="9.9900%" y="239.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="9.7400%" y="213" width="0.0366%" height="15" fill="rgb(206,209,35)"/><text x="9.9900%" y="223.50"></text></g><g><title>[libexpat.so.1.8.1] (1 samples, 0.04%)</title><rect x="9.7400%" y="197" width="0.0366%" height="15" fill="rgb(245,195,53)"/><text x="9.9900%" y="207.50"></text></g><g><title>glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (1 samples, 0.04%)</title><rect x="9.7766%" y="437" width="0.0366%" height="15" fill="rgb(240,92,26)"/><text x="10.0266%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="9.7766%" y="421" width="0.0366%" height="15" fill="rgb(207,40,23)"/><text x="10.0266%" y="431.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="405" width="0.0366%" height="15" fill="rgb(223,111,35)"/><text x="10.0266%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="389" width="0.0366%" height="15" fill="rgb(229,147,28)"/><text x="10.0266%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="373" width="0.0366%" height="15" fill="rgb(211,29,28)"/><text x="10.0266%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="357" width="0.0366%" height="15" fill="rgb(228,72,33)"/><text x="10.0266%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="341" width="0.0366%" height="15" fill="rgb(205,214,31)"/><text x="10.0266%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="325" width="0.0366%" height="15" fill="rgb(224,111,15)"/><text x="10.0266%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="309" width="0.0366%" height="15" fill="rgb(253,21,26)"/><text x="10.0266%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="293" width="0.0366%" height="15" fill="rgb(245,139,43)"/><text x="10.0266%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="9.7766%" y="277" width="0.0366%" height="15" fill="rgb(252,170,7)"/><text x="10.0266%" y="287.50"></text></g><g><title>add_alias2.part.0 (1 samples, 0.04%)</title><rect x="9.8133%" y="293" width="0.0366%" height="15" fill="rgb(231,118,14)"/><text x="10.0633%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="9.8133%" y="277" width="0.0366%" height="15" fill="rgb(238,83,0)"/><text x="10.0633%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="9.8133%" y="261" width="0.0366%" height="15" fill="rgb(221,39,39)"/><text x="10.0633%" y="271.50"></text></g><g><title>pa_log_levelv_meta (2 samples, 0.07%)</title><rect x="9.8133%" y="437" width="0.0732%" height="15" fill="rgb(222,119,46)"/><text x="10.0633%" y="447.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.07%)</title><rect x="9.8133%" y="421" width="0.0732%" height="15" fill="rgb(222,165,49)"/><text x="10.0633%" y="431.50"></text></g><g><title>pa_log_set_ident (2 samples, 0.07%)</title><rect x="9.8133%" y="405" width="0.0732%" height="15" fill="rgb(219,113,52)"/><text x="10.0633%" y="415.50"></text></g><g><title>[libpulse.so.0.24.0] (2 samples, 0.07%)</title><rect x="9.8133%" y="389" width="0.0732%" height="15" fill="rgb(214,7,15)"/><text x="10.0633%" y="399.50"></text></g><g><title>iconv_open (2 samples, 0.07%)</title><rect x="9.8133%" y="373" width="0.0732%" height="15" fill="rgb(235,32,4)"/><text x="10.0633%" y="383.50"></text></g><g><title>__GI___gconv_open (2 samples, 0.07%)</title><rect x="9.8133%" y="357" width="0.0732%" height="15" fill="rgb(238,90,54)"/><text x="10.0633%" y="367.50"></text></g><g><title>__gconv_find_transform (2 samples, 0.07%)</title><rect x="9.8133%" y="341" width="0.0732%" height="15" fill="rgb(213,208,19)"/><text x="10.0633%" y="351.50"></text></g><g><title>__pthread_once_slow (2 samples, 0.07%)</title><rect x="9.8133%" y="325" width="0.0732%" height="15" fill="rgb(233,156,4)"/><text x="10.0633%" y="335.50"></text></g><g><title>__gconv_read_conf (2 samples, 0.07%)</title><rect x="9.8133%" y="309" width="0.0732%" height="15" fill="rgb(207,194,5)"/><text x="10.0633%" y="319.50"></text></g><g><title>add_module.constprop.0 (1 samples, 0.04%)</title><rect x="9.8499%" y="293" width="0.0366%" height="15" fill="rgb(206,111,30)"/><text x="10.0999%" y="303.50"></text></g><g><title>insert_module (1 samples, 0.04%)</title><rect x="9.8499%" y="277" width="0.0366%" height="15" fill="rgb(243,70,54)"/><text x="10.0999%" y="287.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.04%)</title><rect x="9.8499%" y="261" width="0.0366%" height="15" fill="rgb(242,28,8)"/><text x="10.0999%" y="271.50"></text></g><g><title>rodio::stream::OutputStream::try_default (1 samples, 0.04%)</title><rect x="9.8865%" y="437" width="0.0366%" height="15" fill="rgb(219,106,18)"/><text x="10.1365%" y="447.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (1 samples, 0.04%)</title><rect x="9.8865%" y="421" width="0.0366%" height="15" fill="rgb(244,222,10)"/><text x="10.1365%" y="431.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.04%)</title><rect x="9.8865%" y="405" width="0.0366%" height="15" fill="rgb(236,179,52)"/><text x="10.1365%" y="415.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format (1 samples, 0.04%)</title><rect x="9.8865%" y="389" width="0.0366%" height="15" fill="rgb(213,23,39)"/><text x="10.1365%" y="399.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (1 samples, 0.04%)</title><rect x="9.8865%" y="373" width="0.0366%" height="15" fill="rgb(238,48,10)"/><text x="10.1365%" y="383.50"></text></g><g><title>cpal::host::alsa::Device::build_stream_inner (1 samples, 0.04%)</title><rect x="9.8865%" y="357" width="0.0366%" height="15" fill="rgb(251,196,23)"/><text x="10.1365%" y="367.50"></text></g><g><title>alsa::pcm::HwParams::set_buffer_time_near (1 samples, 0.04%)</title><rect x="9.8865%" y="341" width="0.0366%" height="15" fill="rgb(250,152,24)"/><text x="10.1365%" y="351.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="325" width="0.0366%" height="15" fill="rgb(209,150,17)"/><text x="10.1365%" y="335.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="309" width="0.0366%" height="15" fill="rgb(234,202,34)"/><text x="10.1365%" y="319.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="293" width="0.0366%" height="15" fill="rgb(253,148,53)"/><text x="10.1365%" y="303.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="277" width="0.0366%" height="15" fill="rgb(218,129,16)"/><text x="10.1365%" y="287.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="261" width="0.0366%" height="15" fill="rgb(216,85,19)"/><text x="10.1365%" y="271.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="245" width="0.0366%" height="15" fill="rgb(235,228,7)"/><text x="10.1365%" y="255.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="229" width="0.0366%" height="15" fill="rgb(245,175,0)"/><text x="10.1365%" y="239.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="213" width="0.0366%" height="15" fill="rgb(208,168,36)"/><text x="10.1365%" y="223.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="197" width="0.0366%" height="15" fill="rgb(246,171,24)"/><text x="10.1365%" y="207.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="181" width="0.0366%" height="15" fill="rgb(215,142,24)"/><text x="10.1365%" y="191.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="165" width="0.0366%" height="15" fill="rgb(250,187,7)"/><text x="10.1365%" y="175.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="149" width="0.0366%" height="15" fill="rgb(228,66,33)"/><text x="10.1365%" y="159.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="9.8865%" y="133" width="0.0366%" height="15" fill="rgb(234,215,21)"/><text x="10.1365%" y="143.50"></text></g><g><title>specs::storage::Storage&lt;T,D&gt;::insert (1 samples, 0.04%)</title><rect x="9.9231%" y="437" width="0.0366%" height="15" fill="rgb(222,191,20)"/><text x="10.1731%" y="447.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="9.9597%" y="437" width="0.0366%" height="15" fill="rgb(245,79,54)"/><text x="10.2097%" y="447.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.04%)</title><rect x="9.9963%" y="437" width="0.0366%" height="15" fill="rgb(240,10,37)"/><text x="10.2463%" y="447.50"></text></g><g><title>XPending (1 samples, 0.04%)</title><rect x="10.0330%" y="405" width="0.0366%" height="15" fill="rgb(214,192,32)"/><text x="10.2830%" y="415.50"></text></g><g><title>_XEventsQueued (1 samples, 0.04%)</title><rect x="10.0330%" y="389" width="0.0366%" height="15" fill="rgb(209,36,54)"/><text x="10.2830%" y="399.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.04%)</title><rect x="10.0330%" y="373" width="0.0366%" height="15" fill="rgb(220,10,11)"/><text x="10.2830%" y="383.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.04%)</title><rect x="10.0330%" y="357" width="0.0366%" height="15" fill="rgb(221,106,17)"/><text x="10.2830%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.04%)</title><rect x="10.0330%" y="341" width="0.0366%" height="15" fill="rgb(251,142,44)"/><text x="10.2830%" y="351.50"></text></g><g><title>xcb_take_socket (1 samples, 0.04%)</title><rect x="10.0330%" y="325" width="0.0366%" height="15" fill="rgb(238,13,15)"/><text x="10.2830%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::audio::RodioAudioContext&gt; (1 samples, 0.04%)</title><rect x="10.0696%" y="389" width="0.0366%" height="15" fill="rgb(208,107,27)"/><text x="10.3196%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;cpal::platform::platform_impl::Stream&gt; (1 samples, 0.04%)</title><rect x="10.0696%" y="373" width="0.0366%" height="15" fill="rgb(205,136,37)"/><text x="10.3196%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.04%)</title><rect x="10.0696%" y="357" width="0.0366%" height="15" fill="rgb(250,205,27)"/><text x="10.3196%" y="367.50"></text></g><g><title>snd_pcm_close (1 samples, 0.04%)</title><rect x="10.0696%" y="341" width="0.0366%" height="15" fill="rgb(210,80,43)"/><text x="10.3196%" y="351.50"></text></g><g><title>snd_pcm_drop (1 samples, 0.04%)</title><rect x="10.0696%" y="325" width="0.0366%" height="15" fill="rgb(247,160,36)"/><text x="10.3196%" y="335.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.04%)</title><rect x="10.0696%" y="309" width="0.0366%" height="15" fill="rgb(234,13,49)"/><text x="10.3196%" y="319.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.04%)</title><rect x="10.0696%" y="293" width="0.0366%" height="15" fill="rgb(234,122,0)"/><text x="10.3196%" y="303.50"></text></g><g><title>pa_stream_flush (1 samples, 0.04%)</title><rect x="10.0696%" y="277" width="0.0366%" height="15" fill="rgb(207,146,38)"/><text x="10.3196%" y="287.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.04%)</title><rect x="10.0696%" y="261" width="0.0366%" height="15" fill="rgb(207,177,25)"/><text x="10.3196%" y="271.50"></text></g><g><title>pa_stream_update_timing_info (1 samples, 0.04%)</title><rect x="10.0696%" y="245" width="0.0366%" height="15" fill="rgb(211,178,42)"/><text x="10.3196%" y="255.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.04%)</title><rect x="10.0696%" y="229" width="0.0366%" height="15" fill="rgb(230,69,54)"/><text x="10.3196%" y="239.50"></text></g><g><title>pa_operation_ref (1 samples, 0.04%)</title><rect x="10.0696%" y="213" width="0.0366%" height="15" fill="rgb(214,135,41)"/><text x="10.3196%" y="223.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="10.1062%" y="213" width="0.0366%" height="15" fill="rgb(237,67,25)"/><text x="10.3562%" y="223.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="10.1062%" y="197" width="0.0366%" height="15" fill="rgb(222,189,50)"/><text x="10.3562%" y="207.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="10.1062%" y="181" width="0.0366%" height="15" fill="rgb(245,148,34)"/><text x="10.3562%" y="191.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="10.1062%" y="165" width="0.0366%" height="15" fill="rgb(222,29,6)"/><text x="10.3562%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::event::run&lt;diggdrasil::MainState,ggez::error::GameError&gt;::{{closure}}&gt; (3 samples, 0.11%)</title><rect x="10.0696%" y="405" width="0.1098%" height="15" fill="rgb(221,189,43)"/><text x="10.3196%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::context::GraphicsContextGeneric&lt;ggez::graphics::GlBackendSpec&gt;&gt; (2 samples, 0.07%)</title><rect x="10.1062%" y="389" width="0.0732%" height="15" fill="rgb(207,36,27)"/><text x="10.3562%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,winit::window::Window&gt;&gt; (2 samples, 0.07%)</title><rect x="10.1062%" y="373" width="0.0732%" height="15" fill="rgb(217,90,24)"/><text x="10.3562%" y="383.50"></text></g><g><title>&lt;glutin::api::glx::Context as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="10.1062%" y="357" width="0.0732%" height="15" fill="rgb(224,66,35)"/><text x="10.3562%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="10.1062%" y="341" width="0.0732%" height="15" fill="rgb(221,13,50)"/><text x="10.3562%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.07%)</title><rect x="10.1062%" y="325" width="0.0732%" height="15" fill="rgb(236,68,49)"/><text x="10.3562%" y="335.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="309" width="0.0732%" height="15" fill="rgb(229,146,28)"/><text x="10.3562%" y="319.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="293" width="0.0732%" height="15" fill="rgb(225,31,38)"/><text x="10.3562%" y="303.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="277" width="0.0732%" height="15" fill="rgb(250,208,3)"/><text x="10.3562%" y="287.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="261" width="0.0732%" height="15" fill="rgb(246,54,23)"/><text x="10.3562%" y="271.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="245" width="0.0732%" height="15" fill="rgb(243,76,11)"/><text x="10.3562%" y="255.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="10.1062%" y="229" width="0.0732%" height="15" fill="rgb(245,21,50)"/><text x="10.3562%" y="239.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="10.1428%" y="213" width="0.0366%" height="15" fill="rgb(228,9,43)"/><text x="10.3928%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="10.1428%" y="197" width="0.0366%" height="15" fill="rgb(208,100,47)"/><text x="10.3928%" y="207.50"></text></g><g><title>[libm-2.33.so] (830 samples, 30.39%)</title><rect x="42.5485%" y="309" width="30.3918%" height="15" fill="rgb(232,26,8)"/><text x="42.7985%" y="319.50">[libm-2.33.so]</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,803 samples, 66.02%)</title><rect x="10.4357%" y="341" width="66.0198%" height="15" fill="rgb(216,166,38)"/><text x="10.6857%" y="351.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>ggez::graphics::drawparam::DrawParam::to_instance_properties (1,304 samples, 47.75%)</title><rect x="28.7074%" y="325" width="47.7481%" height="15" fill="rgb(251,202,51)"/><text x="28.9574%" y="335.50">ggez::graphics::drawparam::DrawParam::to_instance_properties</text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (96 samples, 3.52%)</title><rect x="72.9403%" y="309" width="3.5152%" height="15" fill="rgb(254,216,34)"/><text x="73.1903%" y="319.50">gla..</text></g><g><title>&lt;gfx_device_gl::command::CommandBuffer as gfx_core::command::Buffer&lt;gfx_device_gl::Resources&gt;&gt;::update_buffer (218 samples, 7.98%)</title><rect x="76.4555%" y="341" width="7.9824%" height="15" fill="rgb(251,32,27)"/><text x="76.7055%" y="351.50">&lt;gfx_device..</text></g><g><title>__memmove_avx_unaligned_erms (218 samples, 7.98%)</title><rect x="76.4555%" y="325" width="7.9824%" height="15" fill="rgb(208,127,28)"/><text x="76.7055%" y="335.50">__memmove_a..</text></g><g><title>&lt;bunnyfont::ggez::GgBunnyFontBatch as ggez::graphics::Drawable&gt;::draw (2,023 samples, 74.08%)</title><rect x="10.4357%" y="373" width="74.0754%" height="15" fill="rgb(224,137,22)"/><text x="10.6857%" y="383.50">&lt;bunnyfont::ggez::GgBunnyFontBatch as ggez::graphics::Drawable&gt;::draw</text></g><g><title>&lt;ggez::graphics::spritebatch::SpriteBatch as ggez::graphics::Drawable&gt;::draw (2,023 samples, 74.08%)</title><rect x="10.4357%" y="357" width="74.0754%" height="15" fill="rgb(254,70,32)"/><text x="10.6857%" y="367.50">&lt;ggez::graphics::spritebatch::SpriteBatch as ggez::graphics::Drawable&gt;::draw</text></g><g><title>&lt;gfx_device_gl::factory::Factory as gfx_core::factory::Factory&lt;gfx_device_gl::Resources&gt;&gt;::create_buffer_raw (2 samples, 0.07%)</title><rect x="84.4379%" y="341" width="0.0732%" height="15" fill="rgb(229,75,37)"/><text x="84.6879%" y="351.50"></text></g><g><title>gfx_device_gl::factory::Factory::init_buffer (1 samples, 0.04%)</title><rect x="84.4746%" y="325" width="0.0366%" height="15" fill="rgb(252,64,23)"/><text x="84.7246%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="84.4746%" y="309" width="0.0366%" height="15" fill="rgb(232,162,48)"/><text x="84.7246%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="84.4746%" y="293" width="0.0366%" height="15" fill="rgb(246,160,12)"/><text x="84.7246%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="84.4746%" y="277" width="0.0366%" height="15" fill="rgb(247,166,0)"/><text x="84.7246%" y="287.50"></text></g><g><title>bunnyfont::font::BunnyFont&lt;T&gt;::get_src_uvs (6 samples, 0.22%)</title><rect x="85.1337%" y="357" width="0.2197%" height="15" fill="rgb(249,219,21)"/><text x="85.3837%" y="367.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::color (2 samples, 0.07%)</title><rect x="85.3534%" y="357" width="0.0732%" height="15" fill="rgb(205,209,3)"/><text x="85.6034%" y="367.50"></text></g><g><title>ggez::graphics::drawparam::DrawParam::rotation (5 samples, 0.18%)</title><rect x="85.4266%" y="357" width="0.1831%" height="15" fill="rgb(243,44,1)"/><text x="85.6766%" y="367.50"></text></g><g><title>bunnyfont::ggez::&lt;impl bunnyfont::char::BunnyChar&lt;ggez::graphics::types::Color&gt;&gt;::draw_to_font_batch (31 samples, 1.14%)</title><rect x="84.5112%" y="373" width="1.1351%" height="15" fill="rgb(206,159,16)"/><text x="84.7612%" y="383.50"></text></g><g><title>ggez::graphics::types::Color::new (1 samples, 0.04%)</title><rect x="85.6097%" y="357" width="0.0366%" height="15" fill="rgb(244,77,30)"/><text x="85.8597%" y="367.50"></text></g><g><title>diggdrasil::data::assets::sprite_builder::SpriteBuilder::get_sprite (4 samples, 0.15%)</title><rect x="85.6463%" y="373" width="0.1465%" height="15" fill="rgb(218,69,12)"/><text x="85.8963%" y="383.50"></text></g><g><title>ndarray::free_functions::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;V&gt;&gt; for ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;A&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="85.7561%" y="357" width="0.0366%" height="15" fill="rgb(212,87,7)"/><text x="86.0061%" y="367.50"></text></g><g><title>&lt;gfx_core::handle::Manager&lt;R&gt; as gfx_core::handle::Producer&lt;R&gt;&gt;::clean_with (1 samples, 0.04%)</title><rect x="85.7927%" y="341" width="0.0366%" height="15" fill="rgb(245,114,25)"/><text x="86.0427%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.7927%" y="325" width="0.0366%" height="15" fill="rgb(210,61,42)"/><text x="86.0427%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.7927%" y="309" width="0.0366%" height="15" fill="rgb(211,52,33)"/><text x="86.0427%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.7927%" y="293" width="0.0366%" height="15" fill="rgb(234,58,33)"/><text x="86.0427%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.7927%" y="277" width="0.0366%" height="15" fill="rgb(220,115,36)"/><text x="86.0427%" y="287.50"></text></g><g><title>&lt;gfx_device_gl::Device as gfx_core::Device&gt;::cleanup (2 samples, 0.07%)</title><rect x="85.7927%" y="357" width="0.0732%" height="15" fill="rgb(243,153,54)"/><text x="86.0427%" y="367.50"></text></g><g><title>gfx_core::handle::Manager&lt;R&gt;::clear (1 samples, 0.04%)</title><rect x="85.8294%" y="341" width="0.0366%" height="15" fill="rgb(251,47,18)"/><text x="86.0794%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.9026%" y="325" width="0.0366%" height="15" fill="rgb(242,102,42)"/><text x="86.1526%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="85.9026%" y="309" width="0.0366%" height="15" fill="rgb(234,31,38)"/><text x="86.1526%" y="319.50"></text></g><g><title>[iris_dri.so] (192 samples, 7.03%)</title><rect x="85.8660%" y="341" width="7.0304%" height="15" fill="rgb(221,117,51)"/><text x="86.1160%" y="351.50">[iris_dri..</text></g><g><title>__memmove_avx_unaligned_erms (190 samples, 6.96%)</title><rect x="85.9392%" y="325" width="6.9572%" height="15" fill="rgb(212,20,18)"/><text x="86.1892%" y="335.50">__memmove..</text></g><g><title>&lt;gfx_device_gl::Device as gfx_core::Device&gt;::submit (193 samples, 7.07%)</title><rect x="85.8660%" y="357" width="7.0670%" height="15" fill="rgb(245,133,36)"/><text x="86.1160%" y="367.50">&lt;gfx_devi..</text></g><g><title>gfx_device_gl::Device::process (1 samples, 0.04%)</title><rect x="92.8964%" y="341" width="0.0366%" height="15" fill="rgb(212,6,19)"/><text x="93.1464%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="92.8964%" y="325" width="0.0366%" height="15" fill="rgb(218,1,36)"/><text x="93.1464%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="92.9330%" y="245" width="0.0366%" height="15" fill="rgb(246,84,54)"/><text x="93.1830%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="92.9330%" y="229" width="0.0366%" height="15" fill="rgb(242,110,6)"/><text x="93.1830%" y="239.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="92.9330%" y="277" width="0.0732%" height="15" fill="rgb(214,47,5)"/><text x="93.1830%" y="287.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="92.9330%" y="261" width="0.0732%" height="15" fill="rgb(218,159,25)"/><text x="93.1830%" y="271.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.04%)</title><rect x="92.9696%" y="245" width="0.0366%" height="15" fill="rgb(215,211,28)"/><text x="93.2196%" y="255.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="92.9696%" y="229" width="0.0366%" height="15" fill="rgb(238,59,32)"/><text x="93.2196%" y="239.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (2,267 samples, 83.01%)</title><rect x="10.0330%" y="437" width="83.0099%" height="15" fill="rgb(226,82,3)"/><text x="10.2830%" y="447.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,267 samples, 83.01%)</title><rect x="10.0330%" y="421" width="83.0099%" height="15" fill="rgb(240,164,32)"/><text x="10.2830%" y="431.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>ggez::event::run::_{{closure}} (2,263 samples, 82.86%)</title><rect x="10.1794%" y="405" width="82.8634%" height="15" fill="rgb(232,46,7)"/><text x="10.4294%" y="415.50">ggez::event::run::_{{closure}}</text></g><g><title>&lt;diggdrasil::MainState as ggez::event::EventHandler&lt;ggez::error::GameError&gt;&gt;::draw (2,263 samples, 82.86%)</title><rect x="10.1794%" y="389" width="82.8634%" height="15" fill="rgb(229,129,53)"/><text x="10.4294%" y="399.50">&lt;diggdrasil::MainState as ggez::event::EventHandler&lt;ggez::error::GameError&gt;&gt;::draw</text></g><g><title>ggez::graphics::present (198 samples, 7.25%)</title><rect x="85.7927%" y="373" width="7.2501%" height="15" fill="rgb(234,188,29)"/><text x="86.0427%" y="383.50">ggez::grap..</text></g><g><title>glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (3 samples, 0.11%)</title><rect x="92.9330%" y="357" width="0.1098%" height="15" fill="rgb(246,141,4)"/><text x="93.1830%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3 samples, 0.11%)</title><rect x="92.9330%" y="341" width="0.1098%" height="15" fill="rgb(229,23,39)"/><text x="93.1830%" y="351.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="92.9330%" y="325" width="0.1098%" height="15" fill="rgb(206,12,3)"/><text x="93.1830%" y="335.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="92.9330%" y="309" width="0.1098%" height="15" fill="rgb(252,226,20)"/><text x="93.1830%" y="319.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="92.9330%" y="293" width="0.1098%" height="15" fill="rgb(216,123,35)"/><text x="93.1830%" y="303.50"></text></g><g><title>__calloc (1 samples, 0.04%)</title><rect x="93.0062%" y="277" width="0.0366%" height="15" fill="rgb(212,68,40)"/><text x="93.2562%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="93.0062%" y="261" width="0.0366%" height="15" fill="rgb(254,125,32)"/><text x="93.2562%" y="271.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (5 samples, 0.18%)</title><rect x="93.0428%" y="437" width="0.1831%" height="15" fill="rgb(253,97,22)"/><text x="93.2928%" y="447.50"></text></g><g><title>ggez::event::run::_{{closure}} (5 samples, 0.18%)</title><rect x="93.0428%" y="421" width="0.1831%" height="15" fill="rgb(241,101,14)"/><text x="93.2928%" y="431.50"></text></g><g><title>&lt;diggdrasil::MainState as ggez::event::EventHandler&lt;ggez::error::GameError&gt;&gt;::draw (5 samples, 0.18%)</title><rect x="93.0428%" y="405" width="0.1831%" height="15" fill="rgb(238,103,29)"/><text x="93.2928%" y="415.50"></text></g><g><title>ggez::graphics::present (5 samples, 0.18%)</title><rect x="93.0428%" y="389" width="0.1831%" height="15" fill="rgb(233,195,47)"/><text x="93.2928%" y="399.50"></text></g><g><title>glutin::windowed::ContextWrapper&lt;glutin::context::PossiblyCurrent,W&gt;::swap_buffers (5 samples, 0.18%)</title><rect x="93.0428%" y="373" width="0.1831%" height="15" fill="rgb(246,218,30)"/><text x="93.2928%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (5 samples, 0.18%)</title><rect x="93.0428%" y="357" width="0.1831%" height="15" fill="rgb(219,145,47)"/><text x="93.2928%" y="367.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="341" width="0.1831%" height="15" fill="rgb(243,12,26)"/><text x="93.2928%" y="351.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="325" width="0.1831%" height="15" fill="rgb(214,87,16)"/><text x="93.2928%" y="335.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="309" width="0.1831%" height="15" fill="rgb(208,99,42)"/><text x="93.2928%" y="319.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="293" width="0.1831%" height="15" fill="rgb(253,99,2)"/><text x="93.2928%" y="303.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="277" width="0.1831%" height="15" fill="rgb(220,168,23)"/><text x="93.2928%" y="287.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="261" width="0.1831%" height="15" fill="rgb(242,38,24)"/><text x="93.2928%" y="271.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.18%)</title><rect x="93.0428%" y="245" width="0.1831%" height="15" fill="rgb(225,182,9)"/><text x="93.2928%" y="255.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.15%)</title><rect x="93.0795%" y="229" width="0.1465%" height="15" fill="rgb(243,178,37)"/><text x="93.3295%" y="239.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="93.1161%" y="213" width="0.1098%" height="15" fill="rgb(232,139,19)"/><text x="93.3661%" y="223.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.11%)</title><rect x="93.1161%" y="197" width="0.1098%" height="15" fill="rgb(225,201,24)"/><text x="93.3661%" y="207.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.07%)</title><rect x="93.1527%" y="181" width="0.0732%" height="15" fill="rgb(221,47,46)"/><text x="93.4027%" y="191.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.04%)</title><rect x="93.1893%" y="165" width="0.0366%" height="15" fill="rgb(249,23,13)"/><text x="93.4393%" y="175.50"></text></g><g><title>[unknown] (2,442 samples, 89.42%)</title><rect x="3.8447%" y="453" width="89.4178%" height="15" fill="rgb(219,9,5)"/><text x="4.0947%" y="463.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (1 samples, 0.04%)</title><rect x="93.2259%" y="437" width="0.0366%" height="15" fill="rgb(254,171,16)"/><text x="93.4759%" y="447.50"></text></g><g><title>x11_dl::xrandr::Xrandr_2_2_0::open (1 samples, 0.04%)</title><rect x="93.2259%" y="421" width="0.0366%" height="15" fill="rgb(230,171,20)"/><text x="93.4759%" y="431.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.04%)</title><rect x="93.2259%" y="405" width="0.0366%" height="15" fill="rgb(210,71,41)"/><text x="93.4759%" y="415.50"></text></g><g><title>dlopen (1 samples, 0.04%)</title><rect x="93.2259%" y="389" width="0.0366%" height="15" fill="rgb(206,173,20)"/><text x="93.4759%" y="399.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="93.2259%" y="373" width="0.0366%" height="15" fill="rgb(233,88,34)"/><text x="93.4759%" y="383.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="93.2259%" y="357" width="0.0366%" height="15" fill="rgb(223,209,46)"/><text x="93.4759%" y="367.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="93.2259%" y="341" width="0.0366%" height="15" fill="rgb(250,43,18)"/><text x="93.4759%" y="351.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.04%)</title><rect x="93.2259%" y="325" width="0.0366%" height="15" fill="rgb(208,13,10)"/><text x="93.4759%" y="335.50"></text></g><g><title>_dl_open (1 samples, 0.04%)</title><rect x="93.2259%" y="309" width="0.0366%" height="15" fill="rgb(212,200,36)"/><text x="93.4759%" y="319.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="93.2259%" y="293" width="0.0366%" height="15" fill="rgb(225,90,30)"/><text x="93.4759%" y="303.50"></text></g><g><title>dl_open_worker (1 samples, 0.04%)</title><rect x="93.2259%" y="277" width="0.0366%" height="15" fill="rgb(236,182,39)"/><text x="93.4759%" y="287.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="93.2259%" y="261" width="0.0366%" height="15" fill="rgb(212,144,35)"/><text x="93.4759%" y="271.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.04%)</title><rect x="94.7638%" y="421" width="0.0366%" height="15" fill="rgb(228,63,44)"/><text x="95.0138%" y="431.50"></text></g><g><title>__GI___sigsetjmp (1 samples, 0.04%)</title><rect x="94.8004%" y="421" width="0.0366%" height="15" fill="rgb(228,109,6)"/><text x="95.0504%" y="431.50"></text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.07%)</title><rect x="94.8371%" y="357" width="0.0732%" height="15" fill="rgb(238,117,24)"/><text x="95.0871%" y="367.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.07%)</title><rect x="94.8371%" y="341" width="0.0732%" height="15" fill="rgb(242,26,26)"/><text x="95.0871%" y="351.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="94.8371%" y="325" width="0.0732%" height="15" fill="rgb(221,92,48)"/><text x="95.0871%" y="335.50"></text></g><g><title>tcache_init.part.0 (2 samples, 0.07%)</title><rect x="94.8371%" y="309" width="0.0732%" height="15" fill="rgb(209,209,32)"/><text x="95.0871%" y="319.50"></text></g><g><title>arena_get2.part.0 (2 samples, 0.07%)</title><rect x="94.8371%" y="293" width="0.0732%" height="15" fill="rgb(221,70,22)"/><text x="95.0871%" y="303.50"></text></g><g><title>new_heap (1 samples, 0.04%)</title><rect x="94.8737%" y="277" width="0.0366%" height="15" fill="rgb(248,145,5)"/><text x="95.1237%" y="287.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="94.9469%" y="325" width="0.0366%" height="15" fill="rgb(226,116,26)"/><text x="95.1969%" y="335.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.04%)</title><rect x="94.9469%" y="309" width="0.0366%" height="15" fill="rgb(244,5,17)"/><text x="95.1969%" y="319.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="94.9469%" y="293" width="0.0366%" height="15" fill="rgb(252,159,33)"/><text x="95.1969%" y="303.50"></text></g><g><title>std::thread::sleep (14 samples, 0.51%)</title><rect x="94.9835%" y="325" width="0.5126%" height="15" fill="rgb(206,71,0)"/><text x="95.2335%" y="335.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (14 samples, 0.51%)</title><rect x="94.9835%" y="309" width="0.5126%" height="15" fill="rgb(233,118,54)"/><text x="95.2335%" y="319.50"></text></g><g><title>__GI___nanosleep (14 samples, 0.51%)</title><rect x="94.9835%" y="293" width="0.5126%" height="15" fill="rgb(234,83,48)"/><text x="95.2335%" y="303.50"></text></g><g><title>__clock_nanosleep_2 (12 samples, 0.44%)</title><rect x="95.0568%" y="277" width="0.4394%" height="15" fill="rgb(228,3,54)"/><text x="95.3068%" y="287.50"></text></g><g><title>gilrs::ff::server::run (19 samples, 0.70%)</title><rect x="94.9103%" y="341" width="0.6957%" height="15" fill="rgb(226,155,13)"/><text x="95.1603%" y="351.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.11%)</title><rect x="95.4962%" y="325" width="0.1098%" height="15" fill="rgb(241,28,37)"/><text x="95.7462%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.11%)</title><rect x="95.4962%" y="309" width="0.1098%" height="15" fill="rgb(233,93,10)"/><text x="95.7462%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.11%)</title><rect x="95.4962%" y="293" width="0.1098%" height="15" fill="rgb(225,113,19)"/><text x="95.7462%" y="303.50"></text></g><g><title>__clock_gettime_2 (3 samples, 0.11%)</title><rect x="95.4962%" y="277" width="0.1098%" height="15" fill="rgb(241,2,18)"/><text x="95.7462%" y="287.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.11%)</title><rect x="95.4962%" y="261" width="0.1098%" height="15" fill="rgb(228,207,21)"/><text x="95.7462%" y="271.50"></text></g><g><title>__GI___clone (65 samples, 2.38%)</title><rect x="93.2625%" y="453" width="2.3801%" height="15" fill="rgb(213,211,35)"/><text x="93.5125%" y="463.50">__..</text></g><g><title>start_thread (26 samples, 0.95%)</title><rect x="94.6906%" y="437" width="0.9520%" height="15" fill="rgb(209,83,10)"/><text x="94.9406%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 0.81%)</title><rect x="94.8371%" y="421" width="0.8056%" height="15" fill="rgb(209,164,1)"/><text x="95.0871%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.81%)</title><rect x="94.8371%" y="405" width="0.8056%" height="15" fill="rgb(213,184,43)"/><text x="95.0871%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.81%)</title><rect x="94.8371%" y="389" width="0.8056%" height="15" fill="rgb(231,61,34)"/><text x="95.0871%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22 samples, 0.81%)</title><rect x="94.8371%" y="373" width="0.8056%" height="15" fill="rgb(235,75,3)"/><text x="95.0871%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.73%)</title><rect x="94.9103%" y="357" width="0.7323%" height="15" fill="rgb(220,106,47)"/><text x="95.1603%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (1 samples, 0.04%)</title><rect x="95.6060%" y="341" width="0.0366%" height="15" fill="rgb(210,196,33)"/><text x="95.8560%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.04%)</title><rect x="95.6060%" y="325" width="0.0366%" height="15" fill="rgb(229,154,42)"/><text x="95.8560%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="95.6060%" y="309" width="0.0366%" height="15" fill="rgb(228,114,26)"/><text x="95.8560%" y="319.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.04%)</title><rect x="95.6060%" y="293" width="0.0366%" height="15" fill="rgb(208,144,1)"/><text x="95.8560%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.04%)</title><rect x="95.6060%" y="277" width="0.0366%" height="15" fill="rgb(239,112,37)"/><text x="95.8560%" y="287.50"></text></g><g><title>crossbeam_epoch::collector::Collector::register (1 samples, 0.04%)</title><rect x="95.6060%" y="261" width="0.0366%" height="15" fill="rgb(210,96,50)"/><text x="95.8560%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="95.6060%" y="245" width="0.0366%" height="15" fill="rgb(222,178,2)"/><text x="95.8560%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="95.6060%" y="229" width="0.0366%" height="15" fill="rgb(226,74,18)"/><text x="95.8560%" y="239.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.04%)</title><rect x="95.8257%" y="405" width="0.0366%" height="15" fill="rgb(225,67,54)"/><text x="96.0757%" y="415.50"></text></g><g><title>_start (7 samples, 0.26%)</title><rect x="95.6426%" y="453" width="0.2563%" height="15" fill="rgb(251,92,32)"/><text x="95.8926%" y="463.50"></text></g><g><title>_dl_start (2 samples, 0.07%)</title><rect x="95.8257%" y="437" width="0.0732%" height="15" fill="rgb(228,149,22)"/><text x="96.0757%" y="447.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.07%)</title><rect x="95.8257%" y="421" width="0.0732%" height="15" fill="rgb(243,54,13)"/><text x="96.0757%" y="431.50"></text></g><g><title>dl_main (1 samples, 0.04%)</title><rect x="95.8623%" y="405" width="0.0366%" height="15" fill="rgb(243,180,28)"/><text x="96.1123%" y="415.50"></text></g><g><title>_dl_receive_error (1 samples, 0.04%)</title><rect x="95.8623%" y="389" width="0.0366%" height="15" fill="rgb(208,167,24)"/><text x="96.1123%" y="399.50"></text></g><g><title>version_check_doit (1 samples, 0.04%)</title><rect x="95.8623%" y="373" width="0.0366%" height="15" fill="rgb(245,73,45)"/><text x="96.1123%" y="383.50"></text></g><g><title>_dl_check_all_versions (1 samples, 0.04%)</title><rect x="95.8623%" y="357" width="0.0366%" height="15" fill="rgb(237,203,48)"/><text x="96.1123%" y="367.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.04%)</title><rect x="95.8623%" y="341" width="0.0366%" height="15" fill="rgb(211,197,16)"/><text x="96.1123%" y="351.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.04%)</title><rect x="95.8623%" y="325" width="0.0366%" height="15" fill="rgb(243,99,51)"/><text x="96.1123%" y="335.50"></text></g><g><title>strcmp (1 samples, 0.04%)</title><rect x="95.8623%" y="309" width="0.0366%" height="15" fill="rgb(215,123,29)"/><text x="96.1123%" y="319.50"></text></g><g><title>diggdrasil (2,577 samples, 94.36%)</title><rect x="1.5745%" y="469" width="94.3610%" height="15" fill="rgb(239,186,37)"/><text x="1.8245%" y="479.50">diggdrasil</text></g><g><title>glPrimitiveBoundingBox (1 samples, 0.04%)</title><rect x="95.8989%" y="453" width="0.0366%" height="15" fill="rgb(252,136,39)"/><text x="96.1489%" y="463.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.04%)</title><rect x="95.8989%" y="437" width="0.0366%" height="15" fill="rgb(223,213,32)"/><text x="96.1489%" y="447.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.04%)</title><rect x="96.0820%" y="437" width="0.0366%" height="15" fill="rgb(233,115,5)"/><text x="96.3320%" y="447.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="96.1186%" y="437" width="0.0366%" height="15" fill="rgb(207,226,44)"/><text x="96.3686%" y="447.50"></text></g><g><title>pa_detect_fork (1 samples, 0.04%)</title><rect x="96.1553%" y="437" width="0.0366%" height="15" fill="rgb(208,126,0)"/><text x="96.4053%" y="447.50"></text></g><g><title>[[heap]] (4 samples, 0.15%)</title><rect x="96.0820%" y="453" width="0.1465%" height="15" fill="rgb(244,66,21)"/><text x="96.3320%" y="463.50"></text></g><g><title>pa_srbchannel_read (1 samples, 0.04%)</title><rect x="96.1919%" y="437" width="0.0366%" height="15" fill="rgb(222,97,12)"/><text x="96.4419%" y="447.50"></text></g><g><title>[[stack]] (1 samples, 0.04%)</title><rect x="96.2285%" y="453" width="0.0366%" height="15" fill="rgb(219,213,19)"/><text x="96.4785%" y="463.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.04%)</title><rect x="96.2285%" y="437" width="0.0366%" height="15" fill="rgb(252,169,30)"/><text x="96.4785%" y="447.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.04%)</title><rect x="96.2651%" y="437" width="0.0366%" height="15" fill="rgb(206,32,51)"/><text x="96.5151%" y="447.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="96.3017%" y="437" width="0.0366%" height="15" fill="rgb(250,172,42)"/><text x="96.5517%" y="447.50"></text></g><g><title>__pthread_mutex_lock_full (1 samples, 0.04%)</title><rect x="96.3383%" y="437" width="0.0366%" height="15" fill="rgb(209,34,43)"/><text x="96.5883%" y="447.50"></text></g><g><title>pa_mainloop_iterate (2 samples, 0.07%)</title><rect x="96.3750%" y="437" width="0.0732%" height="15" fill="rgb(223,11,35)"/><text x="96.6250%" y="447.50"></text></g><g><title>pa_memexport_process_release (1 samples, 0.04%)</title><rect x="96.4482%" y="437" width="0.0366%" height="15" fill="rgb(251,219,26)"/><text x="96.6982%" y="447.50"></text></g><g><title>pa_memexport_put (2 samples, 0.07%)</title><rect x="96.4848%" y="437" width="0.0732%" height="15" fill="rgb(231,119,3)"/><text x="96.7348%" y="447.50"></text></g><g><title>pa_mutex_lock (2 samples, 0.07%)</title><rect x="96.5580%" y="437" width="0.0732%" height="15" fill="rgb(216,97,11)"/><text x="96.8080%" y="447.50"></text></g><g><title>pa_pdispatch_run (3 samples, 0.11%)</title><rect x="96.6313%" y="437" width="0.1098%" height="15" fill="rgb(223,59,9)"/><text x="96.8813%" y="447.50"></text></g><g><title>pa_queue_pop (1 samples, 0.04%)</title><rect x="96.7411%" y="437" width="0.0366%" height="15" fill="rgb(233,93,31)"/><text x="96.9911%" y="447.50"></text></g><g><title>[anon] (15 samples, 0.55%)</title><rect x="96.2651%" y="453" width="0.5492%" height="15" fill="rgb(239,81,33)"/><text x="96.5151%" y="463.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.04%)</title><rect x="96.7777%" y="437" width="0.0366%" height="15" fill="rgb(213,120,34)"/><text x="97.0277%" y="447.50"></text></g><g><title>[libpulse.so.0.24.0] (5 samples, 0.18%)</title><rect x="96.8144%" y="437" width="0.1831%" height="15" fill="rgb(243,49,53)"/><text x="97.0644%" y="447.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.07%)</title><rect x="96.9974%" y="437" width="0.0732%" height="15" fill="rgb(247,216,33)"/><text x="97.2474%" y="447.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.04%)</title><rect x="97.0707%" y="437" width="0.0366%" height="15" fill="rgb(226,26,14)"/><text x="97.3207%" y="447.50"></text></g><g><title>pa_read (2 samples, 0.07%)</title><rect x="97.1073%" y="437" width="0.0732%" height="15" fill="rgb(215,49,53)"/><text x="97.3573%" y="447.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.04%)</title><rect x="97.1805%" y="437" width="0.0366%" height="15" fill="rgb(245,162,40)"/><text x="97.4305%" y="447.50"></text></g><g><title>pa_run_once (1 samples, 0.04%)</title><rect x="97.2171%" y="437" width="0.0366%" height="15" fill="rgb(229,68,17)"/><text x="97.4671%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.48%)</title><rect x="96.8144%" y="453" width="0.4760%" height="15" fill="rgb(213,182,10)"/><text x="97.0644%" y="463.50"></text></g><g><title>pa_tagstruct_getu32 (1 samples, 0.04%)</title><rect x="97.2538%" y="437" width="0.0366%" height="15" fill="rgb(245,125,30)"/><text x="97.5038%" y="447.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.04%)</title><rect x="97.8396%" y="197" width="0.0366%" height="15" fill="rgb(232,202,2)"/><text x="98.0896%" y="207.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.15%)</title><rect x="97.7664%" y="213" width="0.1465%" height="15" fill="rgb(237,140,51)"/><text x="98.0164%" y="223.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.04%)</title><rect x="97.8762%" y="197" width="0.0366%" height="15" fill="rgb(236,157,25)"/><text x="98.1262%" y="207.50"></text></g><g><title>pa_detect_fork (1 samples, 0.04%)</title><rect x="97.8762%" y="181" width="0.0366%" height="15" fill="rgb(219,209,0)"/><text x="98.1262%" y="191.50"></text></g><g><title>__GI___getpid (1 samples, 0.04%)</title><rect x="97.8762%" y="165" width="0.0366%" height="15" fill="rgb(240,116,54)"/><text x="98.1262%" y="175.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.22%)</title><rect x="97.7298%" y="229" width="0.2197%" height="15" fill="rgb(216,10,36)"/><text x="97.9798%" y="239.50"></text></g><g><title>pulse_poll_activate (1 samples, 0.04%)</title><rect x="97.9129%" y="213" width="0.0366%" height="15" fill="rgb(222,72,44)"/><text x="98.1629%" y="223.50"></text></g><g><title>[libpulse.so.0.24.0] (9 samples, 0.33%)</title><rect x="97.6565%" y="277" width="0.3295%" height="15" fill="rgb(232,159,9)"/><text x="97.9065%" y="287.50"></text></g><g><title>pa_pdispatch_run (9 samples, 0.33%)</title><rect x="97.6565%" y="261" width="0.3295%" height="15" fill="rgb(210,39,32)"/><text x="97.9065%" y="271.50"></text></g><g><title>[libpulse.so.0.24.0] (9 samples, 0.33%)</title><rect x="97.6565%" y="245" width="0.3295%" height="15" fill="rgb(216,194,45)"/><text x="97.9065%" y="255.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.04%)</title><rect x="97.9495%" y="229" width="0.0366%" height="15" fill="rgb(218,18,35)"/><text x="98.1995%" y="239.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="97.9495%" y="213" width="0.0366%" height="15" fill="rgb(207,83,51)"/><text x="98.1995%" y="223.50"></text></g><g><title>pa_memexport_process_release (1 samples, 0.04%)</title><rect x="97.9861%" y="277" width="0.0366%" height="15" fill="rgb(225,63,43)"/><text x="98.2361%" y="287.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.04%)</title><rect x="97.9861%" y="261" width="0.0366%" height="15" fill="rgb(207,57,36)"/><text x="98.2361%" y="271.50"></text></g><g><title>pa_flist_push (1 samples, 0.04%)</title><rect x="97.9861%" y="245" width="0.0366%" height="15" fill="rgb(216,99,33)"/><text x="98.2361%" y="255.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="97.9861%" y="229" width="0.0366%" height="15" fill="rgb(225,42,16)"/><text x="98.2361%" y="239.50"></text></g><g><title>pa_packet_new (1 samples, 0.04%)</title><rect x="98.0227%" y="277" width="0.0366%" height="15" fill="rgb(220,201,45)"/><text x="98.2727%" y="287.50"></text></g><g><title>pa_flist_pop (1 samples, 0.04%)</title><rect x="98.0227%" y="261" width="0.0366%" height="15" fill="rgb(225,33,4)"/><text x="98.2727%" y="271.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="98.0227%" y="245" width="0.0366%" height="15" fill="rgb(224,33,50)"/><text x="98.2727%" y="255.50"></text></g><g><title>[libpulsecommon-15.0.so] (16 samples, 0.59%)</title><rect x="97.5101%" y="293" width="0.5859%" height="15" fill="rgb(246,198,51)"/><text x="97.7601%" y="303.50"></text></g><g><title>pa_srbchannel_read (1 samples, 0.04%)</title><rect x="98.0593%" y="277" width="0.0366%" height="15" fill="rgb(205,22,4)"/><text x="98.3093%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="98.0593%" y="261" width="0.0366%" height="15" fill="rgb(206,3,8)"/><text x="98.3093%" y="271.50"></text></g><g><title>pa_flist_push (2 samples, 0.07%)</title><rect x="98.0959%" y="293" width="0.0732%" height="15" fill="rgb(251,23,15)"/><text x="98.3459%" y="303.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.07%)</title><rect x="98.0959%" y="277" width="0.0732%" height="15" fill="rgb(252,88,28)"/><text x="98.3459%" y="287.50"></text></g><g><title>[libpulsecommon-15.0.so] (19 samples, 0.70%)</title><rect x="97.5101%" y="309" width="0.6957%" height="15" fill="rgb(212,127,14)"/><text x="97.7601%" y="319.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.04%)</title><rect x="98.1692%" y="293" width="0.0366%" height="15" fill="rgb(247,145,37)"/><text x="98.4192%" y="303.50"></text></g><g><title>pa_queue_pop (1 samples, 0.04%)</title><rect x="98.2058%" y="309" width="0.0366%" height="15" fill="rgb(209,117,53)"/><text x="98.4558%" y="319.50"></text></g><g><title>pa_flist_push (1 samples, 0.04%)</title><rect x="98.2058%" y="293" width="0.0366%" height="15" fill="rgb(212,90,42)"/><text x="98.4558%" y="303.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.04%)</title><rect x="98.2058%" y="277" width="0.0366%" height="15" fill="rgb(218,164,37)"/><text x="98.4558%" y="287.50"></text></g><g><title>[libpulsecommon-15.0.so] (24 samples, 0.88%)</title><rect x="97.4735%" y="325" width="0.8788%" height="15" fill="rgb(246,65,34)"/><text x="97.7235%" y="335.50"></text></g><g><title>pa_srbchannel_write (3 samples, 0.11%)</title><rect x="98.2424%" y="309" width="0.1098%" height="15" fill="rgb(231,100,33)"/><text x="98.4924%" y="319.50"></text></g><g><title>pa_fdsem_post (2 samples, 0.07%)</title><rect x="98.2790%" y="293" width="0.0732%" height="15" fill="rgb(228,126,14)"/><text x="98.5290%" y="303.50"></text></g><g><title>pa_write (2 samples, 0.07%)</title><rect x="98.2790%" y="277" width="0.0732%" height="15" fill="rgb(215,173,21)"/><text x="98.5290%" y="287.50"></text></g><g><title>__libc_write (2 samples, 0.07%)</title><rect x="98.2790%" y="261" width="0.0732%" height="15" fill="rgb(210,6,40)"/><text x="98.5290%" y="271.50"></text></g><g><title>pa_fdsem_after_poll (7 samples, 0.26%)</title><rect x="98.3523%" y="325" width="0.2563%" height="15" fill="rgb(212,48,18)"/><text x="98.6023%" y="335.50"></text></g><g><title>[libpulsecommon-15.0.so] (4 samples, 0.15%)</title><rect x="98.4621%" y="309" width="0.1465%" height="15" fill="rgb(230,214,11)"/><text x="98.7121%" y="319.50"></text></g><g><title>pa_read (4 samples, 0.15%)</title><rect x="98.4621%" y="293" width="0.1465%" height="15" fill="rgb(254,105,39)"/><text x="98.7121%" y="303.50"></text></g><g><title>__libc_read (4 samples, 0.15%)</title><rect x="98.4621%" y="277" width="0.1465%" height="15" fill="rgb(245,158,5)"/><text x="98.7121%" y="287.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="98.5720%" y="261" width="0.0366%" height="15" fill="rgb(249,208,11)"/><text x="98.8220%" y="271.50"></text></g><g><title>[libpulsecommon-15.0.so] (32 samples, 1.17%)</title><rect x="97.4735%" y="341" width="1.1717%" height="15" fill="rgb(210,39,28)"/><text x="97.7235%" y="351.50"></text></g><g><title>pa_iochannel_new (1 samples, 0.04%)</title><rect x="98.6086%" y="325" width="0.0366%" height="15" fill="rgb(211,56,53)"/><text x="98.8586%" y="335.50"></text></g><g><title>pa_xmalloc0 (1 samples, 0.04%)</title><rect x="98.6086%" y="309" width="0.0366%" height="15" fill="rgb(226,201,30)"/><text x="98.8586%" y="319.50"></text></g><g><title>__calloc (1 samples, 0.04%)</title><rect x="98.6086%" y="293" width="0.0366%" height="15" fill="rgb(239,101,34)"/><text x="98.8586%" y="303.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.04%)</title><rect x="98.6086%" y="277" width="0.0366%" height="15" fill="rgb(226,209,5)"/><text x="98.8586%" y="287.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.04%)</title><rect x="98.6086%" y="261" width="0.0366%" height="15" fill="rgb(250,105,47)"/><text x="98.8586%" y="271.50"></text></g><g><title>pa_rtclock_now (4 samples, 0.15%)</title><rect x="98.6452%" y="341" width="0.1465%" height="15" fill="rgb(230,72,3)"/><text x="98.8952%" y="351.50"></text></g><g><title>pa_rtclock_get (4 samples, 0.15%)</title><rect x="98.6452%" y="325" width="0.1465%" height="15" fill="rgb(232,218,39)"/><text x="98.8952%" y="335.50"></text></g><g><title>__clock_gettime_2 (3 samples, 0.11%)</title><rect x="98.6818%" y="309" width="0.1098%" height="15" fill="rgb(248,166,6)"/><text x="98.9318%" y="319.50"></text></g><g><title>pa_mainloop_dispatch (41 samples, 1.50%)</title><rect x="97.3270%" y="357" width="1.5013%" height="15" fill="rgb(247,89,20)"/><text x="97.5770%" y="367.50"></text></g><g><title>pa_timeval_rtstore (1 samples, 0.04%)</title><rect x="98.7917%" y="341" width="0.0366%" height="15" fill="rgb(248,130,54)"/><text x="99.0417%" y="351.50"></text></g><g><title>pa_timeval_store (1 samples, 0.04%)</title><rect x="98.7917%" y="325" width="0.0366%" height="15" fill="rgb(234,196,4)"/><text x="99.0417%" y="335.50"></text></g><g><title>__GI___poll (23 samples, 0.84%)</title><rect x="98.9015%" y="325" width="0.8422%" height="15" fill="rgb(250,143,31)"/><text x="99.1515%" y="335.50"></text></g><g><title>pa_mainloop_poll (28 samples, 1.03%)</title><rect x="98.8283%" y="357" width="1.0253%" height="15" fill="rgb(211,110,34)"/><text x="99.0783%" y="367.50"></text></g><g><title>[libpulse.so.0.24.0] (27 samples, 0.99%)</title><rect x="98.8649%" y="341" width="0.9886%" height="15" fill="rgb(215,124,48)"/><text x="99.1149%" y="351.50"></text></g><g><title>pa_mutex_lock (3 samples, 0.11%)</title><rect x="99.7437%" y="325" width="0.1098%" height="15" fill="rgb(216,46,13)"/><text x="99.9937%" y="335.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.11%)</title><rect x="99.7437%" y="309" width="0.1098%" height="15" fill="rgb(205,184,25)"/><text x="99.9937%" y="319.50"></text></g><g><title>pa_read (2 samples, 0.07%)</title><rect x="99.8902%" y="341" width="0.0732%" height="15" fill="rgb(228,1,10)"/><text x="100.1402%" y="351.50"></text></g><g><title>__errno_location (2 samples, 0.07%)</title><rect x="99.8902%" y="325" width="0.0732%" height="15" fill="rgb(213,116,27)"/><text x="100.1402%" y="335.50"></text></g><g><title>all (2,731 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(241,95,50)"/><text x="0.2500%" y="495.50"></text></g><g><title>threaded-ml (111 samples, 4.06%)</title><rect x="95.9356%" y="469" width="4.0644%" height="15" fill="rgb(238,48,32)"/><text x="96.1856%" y="479.50">thre..</text></g><g><title>__GI___clone (74 samples, 2.71%)</title><rect x="97.2904%" y="453" width="2.7096%" height="15" fill="rgb(235,113,49)"/><text x="97.5404%" y="463.50">__..</text></g><g><title>start_thread (74 samples, 2.71%)</title><rect x="97.2904%" y="437" width="2.7096%" height="15" fill="rgb(205,127,43)"/><text x="97.5404%" y="447.50">st..</text></g><g><title>[libpulsecommon-15.0.so] (74 samples, 2.71%)</title><rect x="97.2904%" y="421" width="2.7096%" height="15" fill="rgb(250,162,2)"/><text x="97.5404%" y="431.50">[l..</text></g><g><title>[libpulse.so.0.24.0] (74 samples, 2.71%)</title><rect x="97.2904%" y="405" width="2.7096%" height="15" fill="rgb(220,13,41)"/><text x="97.5404%" y="415.50">[l..</text></g><g><title>pa_mainloop_run (74 samples, 2.71%)</title><rect x="97.2904%" y="389" width="2.7096%" height="15" fill="rgb(249,221,25)"/><text x="97.5404%" y="399.50">pa..</text></g><g><title>pa_mainloop_iterate (74 samples, 2.71%)</title><rect x="97.2904%" y="373" width="2.7096%" height="15" fill="rgb(215,208,19)"/><text x="97.5404%" y="383.50">pa..</text></g><g><title>pa_mainloop_prepare (4 samples, 0.15%)</title><rect x="99.8535%" y="357" width="0.1465%" height="15" fill="rgb(236,175,2)"/><text x="100.1035%" y="367.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.04%)</title><rect x="99.9634%" y="341" width="0.0366%" height="15" fill="rgb(241,52,2)"/><text x="100.2134%" y="351.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.04%)</title><rect x="99.9634%" y="325" width="0.0366%" height="15" fill="rgb(248,140,14)"/><text x="100.2134%" y="335.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.04%)</title><rect x="99.9634%" y="309" width="0.0366%" height="15" fill="rgb(253,22,42)"/><text x="100.2134%" y="319.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="99.9634%" y="293" width="0.0366%" height="15" fill="rgb(234,61,47)"/><text x="100.2134%" y="303.50"></text></g></svg></svg>